//var estructura_genera_codigo = nvFW.pageContents['estructura_genera_codigo'] //Array(11, 12)
var consulta = {}
consulta.nro_vendedor = nvFW.operador.nro_vendedor
consulta.nro_estructura = nvFW.operador.nro_estructura
consulta.estructura = nvFW.operador.estructura
consulta.cod_prov = nvFW.operador.cod_prov
consulta.cp = nvFW.operador.cp

consulta.cliente = {}
consulta.cliente.fe_naci = ''
consulta.cliente.sexo = ''
consulta.cliente.tipo_docu = 0
consulta.cliente.nro_docu = 0
consulta.cliente.cuit = ''
consulta.cliente.razon_social = ''
consulta.cliente.domicilio = ''
consulta.cliente.localidad = ''
consulta.cliente.CP = 0
consulta.cliente.provincia = ''
consulta.cliente.cod_prov_persona = 0
consulta.cliente.nro_archivo_nosis = 0
consulta.cliente.nro_docu_db = 0

consulta.cliente.trabajo = {}
consulta.cliente.trabajo.nro_sistema = 0
consulta.cliente.trabajo.sistema = ''
consulta.cliente.trabajo.nro_lote = 0
consulta.cliente.trabajo.lote = ''
consulta.cliente.trabajo.clave_sueldo = ''
consulta.cliente.trabajo.nro_grupo = 0

consulta.cliente.trabajos = {}

consulta.resultado = {}

var cupo_disponible = 0

/* Variables persona */
//var fe_naci = ''
//var sexo = ''
//var tipo_docu = 0
//var nro_docu = 0
//var cuit = ''
//var razon_social = ''
//var domicilio = ''
//var localidad = ''
//var CP = 0
//var provincia = ''
//var cod_prov_persona = 0
//var nro_archivo_nosis = 0
//var nro_docu_db = 0

var TotalCancelaciones1 = 0
var LiberaCuota = 0
var cancelaciones = 0
var importe_max_cuota = 0

var nro_analisis = undefined
var nro_analisis_actual = -1

var crPostergaciones = Array() //guarda los creditos que se relacionan entre si por postergaciones 
var menuRight = false;

//const STAT_QUERY_NAMES = ["Consultas", "Aprobados", "Manual", "Rechazados"];
//let estadisticas;

var vButtonItems = {}
vButtonItems[0] = {}
vButtonItems[0]["nombre"] = "PBuscar";
vButtonItems[0]["etiqueta"] = " Buscar";
vButtonItems[0]["imagen"] = "buscar";
vButtonItems[0]["onclick"] = "return consulta.cliente_buscar()";
vButtonItems[1] = {}
vButtonItems[1]["nombre"] = "PlanBuscar";
vButtonItems[1]["etiqueta"] = "";
vButtonItems[1]["imagen"] = "buscar";
vButtonItems[1]["onclick"] = "return Validar_datos()";

vButtonItems[2] = {}
vButtonItems[2]["nombre"] = "PLimpiar";
vButtonItems[2]["etiqueta"] = "Limpiar";
vButtonItems[2]["imagen"] = "limpiar";
vButtonItems[2]["onclick"] = "return consulta.limpiar()";

vButtonItems[4] = {}
vButtonItems[4]["nombre"] = "Nosis";
vButtonItems[4]["etiqueta"] = "";
vButtonItems[4]["imagen"] = "ver";
vButtonItems[4]["onclick"] = "return VerInformeNosis()";
vButtonItems[5] = {}
vButtonItems[5]["nombre"] = "Noti";
vButtonItems[5]["etiqueta"] = "Notificar";
vButtonItems[5]["imagen"] = "noti";
vButtonItems[5]["onclick"] = "return NotiEnviar()";
vButtonItems[6] = {}
vButtonItems[6]["nombre"] = "NotiR";
vButtonItems[6]["etiqueta"] = "Notificar";
vButtonItems[6]["imagen"] = "noti";
vButtonItems[6]["onclick"] = "return tipo_rechazo()";


var vListButtons = new tListButton(vButtonItems, 'vListButtons');
vListButtons.loadImage("buscar", "image/search_16.png");
vListButtons.loadImage("volver", "image/a_left_2.png");
vListButtons.loadImage("credito", "image/us_dollar_16.png");
vListButtons.loadImage("nuevo", "image/text_document_24.png");
vListButtons.loadImage("guardar", "image/guardar.png");
vListButtons.loadImage("ver", "image/preview_16.png");
vListButtons.loadImage("noti", "image/send-16.png");
vListButtons.loadImage("pdf", "../FW/image/filetype/pdf.png");
vListButtons.loadImage("abrir_chat", "../FW/image/icons/comentario3.png");
vListButtons.loadImage("limpiar", "../FW/image/icons/eliminar.png");
vListButtons.loadImage("cuenta", "../FW/image/icons/cuenta.png");

var vendedor = ''
var WinTipo = ''
var origen = 'precarga'
var tiene_seguro = 0

var win_descargas
function Descargar_formularios() {
    win_descargas = createWindow2({
        url: 'formulario_descarga.aspx?codesrvsw=true',
        title: '<b>Descargar Solicitudes</b>',
        maxHeight: 350,
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true
    });
    win_descargas.options.userData = { res: '' }
    win_descargas.showCenter(true)

    if (isMobile())
        mostrarMenuIzquierdo()
}

var bloquearSlideVertical = 0;

function blockVerticalSlide(sum) {

    bloquearSlideVertical = bloquearSlideVertical + sum

    if (bloquearSlideVertical < 1) {
        $$("body")[0].style.position = "absolute"
        $$("body")[0].style.overflowY = "auto"
    }
    else {
        $$("body")[0].style.position = "fixed"
        $$("body")[0].style.overflowY = "hidden"
    }
}

function window_onload() {
    debugger;
    $("user_name").innerHTML = nvFW.operador.login
    $("user_sucursal").innerHTML = nvFW.operador.sucursal
    //No guarda el scrolling en el historial


    history.scrollRestoration = 'manual'
    ismobile = (isMobile()) ? true : false

    //Anulo el cartel default de nova cuando abandono la aplicacion
    nvFW.alertUnload = false
    vListButtons.MostrarListButton()

    if (nvFW.pageContents["nro_credito"] != "") MostrarCredito(nvFW.pageContents['nro_credito'])

    vendedor_check()

    //ObtenerSucursalOperador()
    document.getElementById('nro_docu1').focus()

    //&& (permisos_precarga & 4)<= 0
    if (!nvFW.tienePermiso('permisos_precarga', 2)) {
        $('divNoti').hide()
        $('divNotiR').hide()
        $('tbResultado').hide()
    }
    //&& (permisos_precarga & 64) == 0
    if (!nvFW.tienePermiso('permisos_precarga', 6))
        $('spanFiltroCuenta').style.visibility = 'hidden';

    // && (permisos_precarga & 128) == 0
    if (!nvFW.tienePermiso('permisos_precarga', 7))
        $('spanFiltroBCRA').style.visibility = 'hidden';

    consulta.limpiar()

    //Esta funcion determina los tamaños de los componentes, menu sup, inf, body, etc
    tamanio = nvtWinDefault()

    //muestra menu dependiendo si debe ser menu movil o no
    vMenuLeft.MostrarMenu(tamanio.ocultarMenu)

    //para operadores de mendoza o que no tengan estructura            
    //mostrar_boton_generarcodigo(nro_estructura==11)


    //funciones de scrolling para mostrar o ocultar el menu.
    detectSwipe($$("BODY")[0], "mostrar", 50);
    //detectSwipe($("divComponentes"), mostrarMenuIzquierdoSwipe, 50, "izq");
    detectSwipe($("menu_left_vidrio"), "colapsar");
    detectSwipe($("menu_left_mobile"), "colapsar");
    detectSwipe($("menu_right_vidrio"), "colapsar");
    //detectSwipe($(vMenuRight.canvasMobile), "colapsar");

    window_onresize()
    //ocultar el vidrio porque el menu no se muestra desde el inicio
    $("menu_left_vidrio").style.right = "-540px";
    //Para mostrar el body cuando termine el onload
    $$("body")[0].style.visibility = "visible"

    campos_defs.items['banco']['onchange'] = banco_onchange
    campos_defs.items['mutual']['onchange'] = mutual_onchange
}



var vMenuRight = new tMenu('menu_right', 'vMenuRight');
var DocumentMNG = new tDMOffLine;
function cargarMenuRight() {
    // cargar menu
    vMenuRight.alineacion = 'izquierda';
    vMenuRight.estilo = 'O'
    vMenuRight.loadImage("inicio", "/fw/image/icons/home.png")
    vMenuRight.loadImage("upload", "/fw/image/icons/play.png")
    vMenuRight.loadImage("ref", "/fw/image/icons/info.png")
    vMenuRight.loadImage("nueva", "/fw/image/icons/nueva.png")
    vMenuRight.loadImage("servicio_asignar", "/fw/image/icons/play.png")
    vMenuRight.loadImage("buscar", "/fw/image/icons/buscar.png")
    vMenuRight.loadImage("vincular", "/fw/image/security/vincular.png")
    vMenuRight.loadImage("herramientas", "/fw/image/icons/herramientas.png")
    vMenuRight.loadImage("operador", "/fw/image/icons/operador.png")
    vMenuRight.loadImage("permiso", "/fw/image/icons/permiso.png")
    vMenuRight.loadImage("imprimir", "/fw/image/icons/imprimir.png")

    vMenuRight.loadImage("parametros", "/fw/image/icons/imprimir.png")
    vMenuRight.loadImage("play", "/fw/image/icons/imprimir.png")

    //Importante: Nombre de la ventana que contendrá los documentos 

    DocumentMNG.APP_PATH = window.location.href;
    var strXML = DocumentMNG.GetDocumentXML('DocMNG', 'GetMenuItems', 'ref_mnu_cabecera')
    vMenuRight.CargarXML(strXML);

    // vMenuRight.MostrarMenu(tamanio.ocultarMenu);//DESATIVADO POR AHORA TODO , PARA VERSION PROD
}

function UbicacionObtener() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(Ubicacion, UbicacionErrores);
    } else {
        nvFW.alert('No disponible')
    }
}

var geoloc_lat = 0
var geoloc_long = 0
var geoloc_domicilio = ''
var geoloc_localidad = ''
var geoloc_provincia = ''
var geoloc_pais = ''
var ismobile = false

function Ubicacion(position) {
    geoloc_lat = position.coords.latitude
    geoloc_long = position.coords.longitude
    UbicacionDescripcion()
}

var win_ubicacion
var btn_aceptar_u = false

function UbicacionErrores(error) {
    var desc_error = ""
    switch (error.code) {
        case error.PERMISSION_DENIED:
            desc_error = "Permiso denegado para acceder a la ubicación."
            break;
        case error.POSITION_UNAVAILABLE:
            desc_error = "La información de la ubicación no se encuentra disponible."
            break;
        case error.TIMEOUT:
            desc_error = "Tiempo de respuesta agotado para obtener la ubicación."
            break;
        case error.UNKNOWN_ERROR:
            desc_error = "Error Desconocido."
            break;
    }
    if (desc_error != "") {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        win_ubicacion = createWindow2({
            title: '<b>Ubicación Geográfica</b>',
            parentWidthPercent: 0.8,
            //parentWidthElement: $("contenedor"),
            maxWidth: 450,
            //centerHFromElement: $("contenedor"),
            minimizable: false,
            maximizable: false,
            draggable: false,
            resizable: true,
            closable: false,
            recenterAuto: true,
            setHeightToContent: true,
            onClose: function () {
                if (btn_aceptar_u) {
                    //ObtenerSucursalOperador()
                    document.getElementById('nro_docu1').focus()
                }
                else
                    UbicacionObtener()
            }
        });
        var html = '<html><head></head><body style="width:100%;height:100%;overflow:hidden">'
        html += '<table class="tb1">'
        html += '<tbody><tr><td colspan="2"><b>La aplicación no pudo obtener la ubicación geográfica.</b><br><br>Acepte el mensaje de seguridad del browser o configure manualmente el acceso a la ubicación.</td></tr>'
        html += '<tr><td style="text-align:center;width:40%"><br><input type="button" style="width:99%" value="Reintentar" onclick="win_ubicacion_cerrar(false)" style="cursor: pointer !important" /></td><td style="text-align:center;width:60%"><br><input type="button" style="width:99%" value="Continuar sin ubicación" onclick="win_ubicacion_cerrar(true)" style="cursor: pointer !important" /></td></tr>'
        html += '</tbody></table></body></html>'

        win_ubicacion.setHTMLContent(html)
        win_ubicacion.showCenter(true)
    }
}

function win_ubicacion_cerrar(aceptar) {
    btn_aceptar_u = aceptar
    win_ubicacion.close()
}

function UbicacionDescripcion() {
    var request = new XMLHttpRequest();

    var method = 'GET';
    var url = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + geoloc_lat + ',' + geoloc_long + '&sensor=true';
    var async = true;

    request.open(method, url, async);
    request.onreadystatechange = function () {
        if (request.readyState == 4 && request.status == 200) {
            var data = JSON.parse(request.responseText);
            try {
                geoloc_domicilio = data.results[0].formatted_address
                geoloc_localidad = data.results[0].address_components[2]['long_name']
                geoloc_provincia = data.results[0].address_components[4]['long_name']
                geoloc_pais = data.results[0].address_components[5]['long_name']
            }
            catch (e) {
            }
            //ObtenerSucursalOperador()
            document.getElementById('nro_docu1').focus()
        }
    };
    request.send();
};






var BodyWidth = 0
var widthWin = 0
var heightWin = 0
var leftWin = 0
var topWin = 0

var win_vendedor
//JMO:Borrar las dos sigueintes lineas
//var permisos_precarga = nvFW.permiso_grupos["permisos_precarga"]
//var permisos_web2 = nvFW.permiso_grupos["permisos_web2"]
function selVendedor_onclick() {
    //(permisos_precarga & 1) <= 0
    if (!nvFW.tienePermiso('permisos_precarga', 1)) {
        nvFW.alert('No posee permisos para seleccionar el vendedor')
        return
    }
    win_vendedor = createWindow2({
        url: 'selVendedor.aspx',
        title: '<b>Seleccionar Vendedor</b>',
        //centerHFromElement: $("contenedor"),
        //parentWidthElement: $("contenedor"),
        //parentWidthPercent: 0.9,
        //parentHeightElement: $("contenedor"),
        //parentHeightPercent: 0.9,
        maxHeight: 500,
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true,
        onClose: selVendedor_return
    });
    win_vendedor.options.userData = { res: '' }
    win_vendedor.showCenter(true)
    // mostrarMenuIzquierdoSwipe()

    if (isMobile())
        mostrarMenuIzquierdo()

}

//var nro_vendedor = 0
//var strVendedor = ''
//var nro_estructura=0
function selVendedor_return() {
    var retorno = win_vendedor.options.userData.res
    if (retorno) {
        $('strVendedor').innerText = retorno["vendedor"]
        //strVendedor = retorno["vendedor"]
        consulta.nro_vendedor = retorno['nro_vendedor']
        consulta.nro_estructura = (retorno['nro_estructura'] == null) ? 0 : retorno['nro_estructura']
        consulta.estructura = ""
        //mostrar_boton_generarcodigo(estructura_genera_codigo.indexOf(+nro_estructura)>=0)
        consulta.cod_prov = retorno['cod_prov']
        consulta.postal_real = retorno['postal_real']
        //mostrar_boton_generarcodigo(nro_estructura==11 || nro_estructura==0)
        //mostrar_boton_generarcodigo(nro_estructura==11)
        consulta.limpiar()


    }
}

var win_estado

function MostrarCredito(nro_credito) {
    var filtros = {}
    filtros['nro_credito'] = nro_credito
    win_estado = createWindow2({
        url: 'credito_mostrar.aspx?codesrvsw=true',
        title: '<b>Crédito: ' + nro_credito + ' </b>',
        //centerHFromElement: $("contenedor"),
        //parentWidthElement: $("contenedor"),
        //parentWidthPercent: 0.9,
        //parentHeightElement: $("contenedor"),
        //parentHeightPercent: 0.9,
        maxHeight: 500,
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true,
        onClose: Cambiar_estado_return
    });

    win_estado.options.userData = { filtros: filtros }
    win_estado.showCenter(true)

}

function Cambiar_estado_return() {
    var retorno = win_estado.options.userData
    if (!retorno.res) return
    if (retorno.res.actualizar) {
        //si el estado al cual se cambio, es tyc. Muestro ventana para enviar el link
        if (retorno.res.estado == "1") {
            var param = {}
            param['nro_credito'] = retorno.res.nro_credito
            var win_enviotyc = window.top.createWindow2({
                url: 'precarga_envio_tyc.aspx?crparam=' + retorno.res.nro_credito,
                title: '<b>Enviar Terminos y condiciones</b>',
                centerHFromElement: window.top.$("contenedor"),
                parentWidthElement: window.top.$("contenedor"),
                parentWidthPercent: 0.9,
                parentHeightElement: window.top.$("contenedor"),
                parentHeightPercent: 0.9,
                maxHeight: 200,
                minimizable: false,
                maximizable: false,
                draggable: true,
                resizable: true,
                onClose: function () { }
            });
            win_enviotyc.options.userData = { param: param }
            win_enviotyc.showCenter(true)

        }
    }
}

var cod_prov_op
var sucursal_postal_real

function vendedor_check() {
    $('strVendedor').innerText = nvFW.operador.razon_social
    if (consulta.nro_vendedor == 0)
        selVendedor_onclick()
}

//function ObtenerSucursalOperador() {

//    //cod_prov_op = nvFW.operador.cod_prov
//    //sucursal_postal_real = nvFW.operador.sucursal_postal_real
//    //consulta.cliente.nro_docu = nvFW.operador.nro_docu
//    //$('strVendedor').innerText = nvFW.operador.razon_social
//    //strVendedor = nvFW.operador.razon_social
//    //nro_vendedor = nvFW.operador.nro_vendedor
//    //nro_estructura = nvFW.operador.nro_estructura

//    //consulta.nro_vendedor=nro_vendedor
//    //if (nvFW.pageContents['nro_credito'] != 0)
//    //    MostrarCredito(nvFW.pageContents['nro_credito'])
//    //else if (nro_vendedor == '')
//    //    selVendedor_onclick()




//}

//function mostrar_boton_generarcodigo(bandera){

//    //oculto para cuando la estructura no es de mendoza
//    if(bandera){
//            if($("menuItem_menu_left_mobile_6")!=null){
//               $("menuItem_menu_left_mobile_6").show() 
//           }
//    }else{
//        if($("menuItem_menu_left_mobile_6")!=null){
//               $("menuItem_menu_left_mobile_6").hide() 
//        }
//    }
//}


function btnBuscar_trabajo_onkeydown(e) {
    var key = Prototype.Browser.IE ? e.keyCode : e.which
    if ((key == 13) || (key == 9)) {
        consulta.cliente_buscar()
        return false
    }
}



function rddoc_onclick() {
    document.getElementById('nro_docu1').focus()
}






function Mostrar_grupos() {
    $('divMostrarTrabajos').innerHTML = ''
    var strHTML = ""
    strHTML += "<table class='tb1' cellspacing='1' cellpadding='1'>"
    strHTML += "<tr><td class='Tit1' colspan='2' style='text-align:center'><b>Seleccione el mercado para continuar.<b></td></tr>"
    strHTML += "<tr><td style='width:100%'>"
    strHTML += "<table class='tb1' style='max-width:450px; margin:auto'><tr><td id='tdgrupos'></td><td id='divGAceptar'></td></tr></table>"
    strHTML += "</td>"
    strHTML += "</tr></table>"
    $('divMostrarTrabajos').insert({ bottom: strHTML })
    $('divMostrarTrabajos').show()
    var vButtonItems = {}
    vButtonItems[0] = {}
    vButtonItems[0]["nombre"] = "GAceptar";
    vButtonItems[0]["etiqueta"] = "Aceptar";
    vButtonItems[0]["imagen"] = "aceptar";
    vButtonItems[0]["onclick"] = "consulta.grupo_seleccionar()";
    var vListButtons = new tListButton(vButtonItems, 'vListButtons');
    vListButtons.loadImage("aceptar", "image/search_16.png");
    vListButtons.MostrarListButton()
    campos_defs.add("grupos", { nro_campo_tipo: 1, target: "tdgrupos", enDB: false, cacheControl: 'Session', filtroXML: nvFW.pageContents["grupos_cda"] })

    //JMO
    campos_defs.items["grupos"].onchange = function () { campos_defs.items["grupos"].input_text.focus() }
    $(campos_defs.items["grupos"].input_text).observe('keypress', function (e) {
        var tecla = !e.keyCode ? e.which : e.keyCode
        if (tecla = 13)
            consulta.grupo_seleccionar()
    })

    campos_defs.items["grupos"].input_text.ondblclick()
}

var CDA = 0
var nro_banco = 31

var win_sel_cuit
var win_sel_dbcuit



var nro_tipo_cobro = 0
var win_cobro
var btn_cobro_aceptar = false
var tiene_cupo = false
var grupo = ''
var tipo_cobro = ''
var tipo_rechazo_call = ''
var observaciones_call = ''


function win_tipo_rechazo(aceptar) {
    dictamen = 'RECHAZADO'
    tipo_rechazo_call = $('cbtr').value
    observaciones_call = $('txt_observaciones').value
    btn_tr_aceptar = aceptar
    win_tr.close()
}

function Generar_codigo() {
    if (nro_vendedor == 0 || nro_vendedor == '') {
        alert("debe seleccionar vendedor")
        return
    }
    var rstr = new tRS()
    rstr.open({ filtroXML: nvFW.pageContents["codigoyacare"], params: "<criterio><params nro_docu='" + consulta.cliente.nro_docu + "' sexo='" + consulta.cliente.sexo + "' tipo_docu='" + consulta.cliente.tipo_docu + "' cuit='" + consulta.cliente.cuit + "' nro_vendedor='" + consulta.nro_vendedor + "'  /></criterio>" })

    if (!rstr.eof()) {
        var codigo = rstr.getdata('codigo')
        var param = {}
        param['codigo'] = codigo
        param['strNombreCompleto'] = nombre.trim()
        var win_enviotyc = window.top.createWindow2({
            url: 'precarga_envio_codigo.aspx',
            title: '<b>Enviar codigo yacaré</b>',
            centerHFromElement: window.top.$("contenedor"),
            parentWidthElement: window.top.$("contenedor"),
            parentWidthPercent: 0.9,
            parentHeightElement: window.top.$("contenedor"),
            parentHeightPercent: 0.9,
            maxHeight: 180,
            minimizable: false,
            maximizable: false,
            draggable: true,
            resizable: true,
            onClose: function () { }
        });
        win_enviotyc.options.userData = { param: param }
        win_enviotyc.showCenter(true)
    }

}

var win_tr
var btn_tr_aceptar = false

function tipo_rechazo() {
    win_tr = createWindow2({
        className: 'alphacube',
        title: '<b>Tipo de rechazo</b>',
        parentWidthPercent: 0.8,
        //parentWidthElement: $("contenedor"),
        maxWidth: 450,
        maxHeight: 200,
        //centerHFromElement: $("contenedor"),
        minimizable: false,
        maximizable: false,
        draggable: false,
        resizable: true,
        closable: false,
        recenterAuto: true,
        setHeightToContent: true,
        //destroyOnClose: true,
        onClose: function () {
            if (btn_tr_aceptar) {
                strHTML_CDA_noti = ''
                strHTML_CDA_noti += '<table>'
                strHTML_CDA_noti += '<tr><td style="width:100%;font-family: Verdana,Arial,Sans-serif;font-size: 14px;color:#800000 !important"><b>' + tipo_rechazo_call + '</b></td></tr>'
                strHTML_CDA_noti += '<table style="font-family: Verdana,Arial,Sans-serif;font-size: 12px"><tr><td><b>CUIT/CUIL:</b></td><td style="text-align:left">' + consulta.cliente.cuit + '</td></tr>'
                strHTML_CDA_noti += '<tr><td><b>Nombre:</b></td><td>' + nombre + '</td></tr><tr><td><b>Observaciones:</b></td><td>' + observaciones_call + '</td></tr></table>'
                NotiEnviar()
            }
        }
    });
    var html = "<html><head></head><body style='width:100%;height:100%;overflow:hidden'>"
    html += "<table class='tb1' style='width:100%'>"
    html += "<tbody><tr><td colspan=2 class='Tit1'><br><b>Seleccione el tipo de rechazo.</b><br><br></td></tr>"
    html += "<tr><td style='width:30%'>Tipo:</td><td style='width:70%'><select id='cbtr' style='width:100%'>"
    var str_sel = ""
    var rstr = new tRS()
    rstr.open({ filtroXML: nvFW.pageContents["tipos_rechazos"] })
    while (!rstr.eof()) {
        html += "<option id='" + rstr.getdata('nro_com_tipo') + "' value='" + rstr.getdata('com_tipo') + "' " + str_sel + ">" + rstr.getdata('com_tipo') + "</option>"
        rstr.movenext()
    }
    html += "</select></td></tr>"
    html += "<tr><td>Observaciones:</td><td><textarea id='txt_observaciones' style='width:100%' rows='3'></textarea></td></tr>"
    html += "<tr><td style='text-align:center' colspan='2'><br><input type='button' value='Notificar' onclick='win_tipo_rechazo(true)'/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type='button' value='Cancelar' onclick='win_tipo_rechazo(false)'/><br><br></td></tr>"
    html += "</tbody></table></body></html>"
    win_tr.setHTMLContent(html)
    win_tr.showCenter(true)
}


var hpx = 0

var win_noti

function NotiEnviar() {
    var subject = 'Notificación Precarga ' + dictamen + ' - ' + consulta.cliente.cuit + ':' + nombre.trim()
    var body = '<b>Razón Social:</b> ' + nombre + '<br>'
    body += '<b>CUIT/CUIL:</b> ' + consulta.cliente.cuit + '<br><br>'
    body += 'Informe Comercial:<br>'
    body += '<b>Situación:</b> ' + sit_bcra + ' - <b>CDA:</b> ' + dictamen
    var parametros = {}
    parametros['subject'] = subject
    parametros['body'] = strHTML_CDA_noti
    parametros['tipo_rechazo_call'] = tipo_rechazo_call
    parametros['cuit'] = consulta.cliente.cuit
    win_noti = createWindow2({
        url: 'sendMail.aspx?nro_vendedor=' + nro_vendedor,
        title: '<b>Notificación</b>',
        //centerHFromElement: $("contenedor"),
        //parentWidthElement: $("contenedor"),
        //parentWidthPercent: 0.9,
        //parentHeightElement: $("contenedor"),
        //parentHeightPercent: 0.9,
        maxHeight: 500,
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true
    });
    win_noti.options.userData = { parametros: parametros }
    win_noti.showCenter(true)
}

var dictamen = ''
//var sit_bcra = 99
var nro_banco_cobro = 0
var banco_cobro = ''
var cobro_array = {}






function win_cobro_cerrar(aceptar) {

    if (aceptar) {
        var i = $$('input:checked[type="radio"][name="rdcobro"]').pluck('value')[0]
        consulta.nro_tipo_cobro = cobro_array[i]['nro_tipo_cobro']
        consulta.tipo_cobro = cobro_array[i]['tipo_cobro']
        consulta.nro_banco_cobro = ((cobro_array[i]['nro_banco'] == undefined) ? 0 : cobro_array[i]['nro_banco'])
        consulta.banco_cobro = ((cobro_array[i]['abreviacion'] == undefined) ? 0 : cobro_array[i]['abreviacion'])
    }
    btn_cobro_aceptar = aceptar
    win_cobro.close()

}

function selcobro(nro_tipo_cobro_sel) {
    var radioGrp = document['all']['rdcobro']
    if (radioGrp.length == undefined)
        $("rdcobro").checked = true
    else {
        for (i = 0; i < radioGrp.length; i++) {
            if (radioGrp[i].value == nro_tipo_cobro_sel)
                radioGrp[i].checked = true
            else
                radioGrp[i].checked = false
        }
    }
}
var existe
var fecha_actualizacion = ''
var disponible = 0

function NOSIS_evaluar_identidad(nro_docu, onSusses, onError) {
    var strXML = ""
    var strHTML = ""
    var oXML = new tXML();
    oXML.async = true
    oXML.load("/FW/servicios/NOSIS/GetXML.aspx", "accion=SAC_identidad&criterio=<criterio><nro_docu>" + nro_docu + '</nro_docu><CDA>' + CDA + '</CDA><nro_vendedor>' + consulta.nro_vendedor + '</nro_vendedor><nro_banco>' + nro_banco + '</nro_banco></criterio>',
        function () {
            var NODs = oXML.selectNodes('Resultado/Personas/Persona')
            if (NODs.length == 0) {
                nvFW.alert('No se encontro información con el documento ingresado.')
                onError()
            }
            if (NODs.length == 1) {
                consulta.cliente.cuit = XMLText(selectSingleNode('Doc', NODs[0]))
                existe = selectSingleNode('@existe', NODs[0]).nodeValue
                onSusses(consulta.cliente.cuit)
            }
            if (NODs.length > 1) {
                win_sel_cuit = createWindow2({
                    title: '<b>Seleccionar Persona</b>',
                    //centerHFromElement: $("contenedor"),
                    //parentWidthElement: $("contenedor"),
                    //parentWidthPercent: 0.9,
                    //parentHeightElement: $("contenedor"),
                    //parentHeightPercent: 0.9,
                    maxHeight: 500,
                    minimizable: false,
                    maximizable: false,
                    draggable: true,
                    resizable: true,
                    onClose: function (win) {
                        var e
                        try {
                            consulta.cliente.cuit = win.options.userData.res['cuit']
                            existe = win.options.userData.res['existe']
                            onSusses(consulta.cliente.cuit)
                        }
                        catch (e) {
                            rserror_handler("Error al conaultar el CUIT")
                            return
                        }
                    }
                });
                win_sel_cuit.options.userData = { NODs: oXML }
                win_sel_cuit.setURL('NOSIS_sel_cuit.aspx')
                win_sel_cuit.showCenter(true)
                nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            }
        }
    );
}

//var nombre = ''
//var edad = 0



function NOSIS_actualizar_fuentes(cuit) {
    NOSIS_generar_informe(cuit)
}

var NosisXML = ''
var strHTMLNosis = ''


function NOSIS_generar_informe(cuit) {
    nvFW.bloqueo_msg('blq_precarga', "Obteniendo información de NOSIS...")
    var oXML = new tXML();
    oXML.async = true
    oXML.method = 'POST'
    oXML.onComplete = function () {
        strXML = XMLtoString(oXML.xml)
        NosisXML = strXML
        objXML = new tXML();
        objXML.async = false
        if (objXML.loadXML(strXML))
            var NODs = objXML.selectNodes('Respuesta/ParteHTML')
        if (NODs.length == 1)
            strHTMLNosis = XMLText(NODs[0])
        strHTMLNosis = replace(strHTMLNosis, "undefined", "'")
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
    }
    oXML.onFailure = function () { nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga') }
    oXML.load('/FW/servicios/NOSIS/GetXML.aspx', 'accion=SAC_informe&criterio=<criterio><cuit>' + cuit + '</cuit><CDA>' + CDA + '</CDA><nro_vendedor>' + consulta.nro_vendedor + '</nro_vendedor><nro_banco>' + nro_banco + '</nro_banco></criterio>')

}



var prueba = ''
var NroConsulta = 0
var edad = ''
var fe_naci_str = ''

var HTMLCDA = ''

function BCRA_obtener(strXML) {
    try {
        var SitBCRA = {}
        objXML = new tXML();
        objXML.async = false
        if (objXML.loadXML(strXML)) {
            Deuda = objXML.getElementsByTagName('Deuda')
            NroConsulta = XMLText(objXML.selectSingleNode('Respuesta/Consulta/NroConsulta'))
            consulta.cliente.cuit = XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/Doc'))
            consulta.cliente.razon_social = XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/RZ'))
            consulta.cliente.edad = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/Edad')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/Edad')) : '99'
            consulta.cliente.documento = XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/Tipo'))
            consulta.cliente.domicilio = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Dom')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Dom')) : ''
            consulta.cliente.localidad = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Loc')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Loc')) : ''
            consulta.cliente.CP = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/CP')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/CP')) : sucursal_postal_real
            consulta.cliente.provincia = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Prov')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/DomFiscal/Prov')) : ''
            switch (documento) {
                case 'DNI':
                    consulta.cliente.tipo_docu = 3
                    break;
                case 'LE':
                    consulta.cliente.tipo_docu = 1
                    break;
                case 'LC':
                    consulta.cliente.tipo_docu = 2
                    break;
                default:
                    consulta.cliente.tipo_docu = 3
            }
            consulta.cliente.nro_docu = consulta.cliente.cuit.substring(2, 10)
            consulta.cliente.sexo = 'M'
            consulta.cliente.sexo_desc = XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/Sexo'))
            if (sexo_desc == 'Femenino')
                consulta.cliente.sexo = 'F'
            fe_naci_str = (objXML.selectSingleNode('Respuesta/ParteXML/Dato/FecNac')) ? XMLText(objXML.selectSingleNode('Respuesta/ParteXML/Dato/FecNac')) : ''
            consulta.cliente.fe_naci = (fe_naci_str != '') ? fe_naci_str.substring(6, 8) + '/' + fe_naci_str.substring(4, 6) + '/' + fe_naci_str.substring(0, 4) : ''
            $('strApeyNomb').innerHTML = ''
            $('strApeyNomb').insert({ bottom: razon_social })
            //$('strCUIT').innerHTML = ''
            //$('strCUIT').insert({ bottom: consulta.cliente.cuit })
            //$('strFNac').innerHTML = ''
            //if (consulta.cliente.fe_naci != '')
            //    $('strFNac').insert({ bottom: consulta.cliente.fe_naci + ' (' + edad + ')' })
            var rs = new tRS();


            rs.open({ filtroXML: nvFW.pageContents["sit_bcra"], params: "<criterio><params id_consulta='" + NroConsulta + "' /></criterio>" })
            if (!rs.eof())
                sit_bcra = rs.getdata('situacion')

            $('strSitBCRA').innerHTML = ''
            $('strSitBCRA').insert({ bottom: sit_bcra })
            $('strSitBCRA').removeClassName($('strSitBCRA').className)
            switch (sit_bcra) {
                case '1':
                    $('strSitBCRA').addClassName('sit1')
                    break;
                case '2':
                    $('strSitBCRA').addClassName('sit2')
                    break;
                case '3':
                    $('strSitBCRA').addClassName('sit3')
                    break;
                case '4':
                    $('strSitBCRA').addClassName('sit4')
                    break;
                case '5':
                    $('strSitBCRA').addClassName('sit5')
                    break;
                case '6':
                    $('strSitBCRA').addClassName('sit6')
                    break;
            }
            empresa = objXML.getElementsByTagName('CalculoCDA')[0].getAttribute('Titulo')
            HTMLCDA += "<html><head></head><body style='width:100%;height:100%;overflow:hidden'><table class='tb1 highlightEven'><tr><td style='width:30%'><b>CDA</b></td><td style='width:80%' class='Tit1'>" + empresa + "</td></tr>"

            itemsCDA = objXML.getElementsByTagName('Item')
            for (var i = 0; i < itemsCDA.length; i++) {
                descripcion = XMLText(itemsCDA[i].childNodes[0])
                if (descripcion == 'Dictamen') {
                    valor = "<b>" + XMLText(itemsCDA[i].childNodes[1]) + "</b>"
                    dictamen = XMLText(itemsCDA[i].childNodes[1])
                    $('strDictamen').innerHTML = ''
                    $('strDictamen').insert({ bottom: dictamen })
                    $('strDictamen').removeClassName($('strDictamen').className)
                    switch (dictamen) {
                        case 'APROBADO':
                            $('strDictamen').addClassName('cdaAC')
                            break;
                        case 'OBSERVADO':
                            $('strDictamen').addClassName('cdaOB')
                            break;
                        case 'RECHAZADO':
                            $('strDictamen').addClassName('cdaRC')
                            break;
                    }
                }
                else
                    valor = XMLText(itemsCDA[i].childNodes[1])
                HTMLCDA += "<tr><td style='width:30%'>" + descripcion + "</td><td style='text-align:center'>" + valor + "</td></tr>"
            }
            HTMLCDA += "</table></body></html>"
            $('strFuentes').innerHTML = ''
            var parteHTML = XMLText(objXML.selectSingleNode('Respuesta/ParteHTML'))
            var res = parteHTML.search(/Falta último Informe BCRA/)
            if (res != -1)
                $('strFuentes').insert({ bottom: ' - Falta último Informe BCRA' })

            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            Control_socio()
        }
    }
    catch (err) {
        rserror_handler('No se puede generar la consulta de NOSIS. Intente nuevamente.')
    }
}

var Creditos = {}
//var Consumos = {}
var win_persona

var persona_existe = true
var fe_naci_socio = ''
var edad_socio = 0
var win_sel_persona

var datos_persona = {}

function Control_socio() {
    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Obteniendo información del socio...')
    var cr_mes = 0
    var tiene_cs = 0
    var tiene_cr = 0
    var rs = new tRS();
    rs.async = true
    rs.onError = function (rs) {
        rserror_handler("Error al consultar los datos. Intente nuevamente (Persona).")
    }
    rs.onComplete = function (rs) {
        if (rs.recordcount > 0) {
            cr_mes = rs.getdata('cr_mes')
            tiene_cs = rs.getdata('tiene_cs')
            tiene_cr = rs.getdata('tiene_cr')
            consulta.cliente.nro_docu = rs.getdata('nro_docu')
        }
        Evaluar_socio(cr_mes, tiene_cs, tiene_cr)
    }
    if (consulta.cliente.cuit == "") {
        rserror_handler("Sin cuit. Intente nuevamente")
        return
    }
    rs.open({ filtroXML: nvFW.pageContents["evaluar_persona"], params: "<criterio><params nro_vendedor='" + consulta.nro_vendedor + "' cuit='" + consulta.cliente.cuit + "' /></criterio>" })

}

var win_control_cred
var opcion_ctrl = 0

function win_control_cred_cerrar(opcion) {
    if (opcion == 1)
        VerCreditos('S')
    else {
        opcion_ctrl = opcion
        win_control_cred.close()
    }

}

function Evaluar_socio(cr_mes, tiene_cs, tiene_cr) {
    if ((tiene_cs > 0) || (tiene_cr > 0))
        $('divSocio').show()
    var Evaluar_persona = function () {
        var rs = new tRS();
        rs.async = true
        rs.onError = function (rs) {
            rserror_handler("Error al consultar los datos. Intente nuevamente (Persona).")
        }
        rs.onComplete = function (rs) {
            if (rs.recordcount == 0) {
                $('divSocio').hide()
                persona_existe = false
                SeleccionarPlanesMostrar()
            }
            if (rs.recordcount == 1) {  // Si la búsqueda de la persona por cuit da un resultado -> Carga creditos y CS
                //consulta.cliente.nro_docu = rs.getdata('nro_docu')
                //consulta.cliente.tipo_docu = rs.getdata('tipo_docu')
                //consulta.cliente.sexo = rs.getdata('sexo')
                //$('sexo').value =consulta.cliente.sexo
                // $('tipo_docu').value = consulta.cliente.tipo_docu
                //cod_prov_persona = rs.getdata('cod_prov')
                //fe_naci_socio = rs.getdata('fe_naci')
                //edad_socio = rs.getdata('edad')
                Evaluar_cs(consulta.cliente.nro_docu, consulta.cliente.tipo_docu, consulta.cliente.sexo, consulta.cliente.cuit, consulta.cliente.trabajo.nro_grupo)
            }
            if (rs.recordcount > 1) {   // Si la búsqueda da más de un resultado
                datos_persona['nro_docu'] = ''
                datos_persona['cuit'] = consulta.cliente.cuit
                win_sel_persona = createWindow2({
                    title: '<b>Seleccionar Persona</b>',
                    //centerHFromElement: $("contenedor"),
                    //parentWidthElement: $("contenedor"),
                    //parentWidthPercent: 0.9,
                    //parentHeightElement: $("contenedor"),
                    //parentHeightPercent: 0.9,
                    maxHeight: 500,
                    minimizable: false,
                    maximizable: false,
                    draggable: true,
                    resizable: true,
                    onClose: function (win) {
                        if (win.options.userData.res != undefined) {
                            var filtros = {}
                            //consulta.cliente.nro_docu = win.options.userData.res['nro_docu']
                            //consulta.cliente.tipo_docu = win.options.userData.res['tipo_docu']
                            //consulta.cliente.sexo = win.options.userData.res['sexo']
                            cod_prov_persona = win.options.userData.res['cod_prov']
                            //var nombre = win.options.userData.res['nombre']
                            //fe_naci_socio = win.options.userData.res['fe_naci']
                            rs = null
                            Evaluar_cs(consulta.cliente.nro_docu, consulta.cliente.tipo_docu, consulta.cliente.sexo, consulta.cliente.cuit, consulta.cliente.trabajo.nro_grupo)
                        }
                        else {
                            $('divSocio').hide()
                            persona_existe = false
                            SeleccionarPlanesMostrar()
                        }
                    }
                });
                win_sel_persona.options.userData = { datos_persona: datos_persona }
                win_sel_persona.setURL('precarga_sel_persona.aspx?codesrvsw=true')
                win_sel_persona.showCenter(true)

            }
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        }
        rs.open({ filtroXML: nvFW.pageContents["persona"], params: "<criterio><params cuit='" + consulta.cliente.cuit + "' /></criterio>" })
    }

    var Evaluar_cs = function (nro_docu, tipo_docu, sexo, cuit, nro_grupo) {
        nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Obteniendo información de cuota social...')
        if (tiene_cs > 0) {
            var strHTMLS = "<table class='tb1' cellspacing='1' cellpadding='1' style='vertical-align:top'>"
            var rsCS = new tRS();
            rsCS.async = true
            rsCS.onError = function (rsCS) {
                rserror_handler("Error al consultar los datos. Intente nuevamente (creditos_cs).")
            }
            rsCS.onComplete = function (rsCS) {
                if (rsCS.recordcount > 0)
                    strHTMLS += "<tr><td class='Tit1' style='width:70%'>Mutual</td><td class='Tit1' style='width:30%;text-align:right'>Cuota</td></tr>"
                else
                    strHTMLS += "<tr><td class='Tit1' style='width:100%' colspan=2>Sin información</td></tr>"
                while (!rsCS.eof()) {
                    i++
                    Creditos[i] = {}
                    Creditos[i]['nro_credito'] = 0
                    Creditos[i]['nro_banco'] = 200
                    Creditos[i]['nro_mutual'] = rsCS.getdata('nro_mutual')
                    Creditos[i]['mutual'] = rsCS.getdata('mutual')
                    Creditos[i]['importe_cuota'] = parseFloat(rsCS.getdata('importe_cuota')).toFixed(2)
                    Creditos[i]['saldo'] = 0
                    Creditos[i]['saldo_nro_entidad'] = 0
                    Creditos[i]['cancela_vence'] = ''
                    Creditos[i]['cancela_cuota_paga'] = 0
                    Creditos[i]['nro_credito_seguro'] = 0
                    Creditos[i]['nro_calc_tipo'] = 0
                    Creditos[i]['cancela'] = false
                    rsCS.movenext()
                }
                for (var j in Creditos) {
                    strHTMLS += "<tr><td>" + Creditos[j]['mutual'] + "</td><td style='text-align:right'>$ " + parseFloat(Creditos[j]['importe_cuota']).toFixed(2) + "</td></tr>"
                }
                strHTMLS += "</table>"
                $('tbCuotaSocial').insert({ bottom: strHTMLS })
                nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
                Evaluar_cr()
            }
            rsCS.open({ filtroXML: nvFW.pageContents["creditos_cs"], params: "<criterio><params nro_docu='" + nro_docu + "' tipo_docu='" + tipo_docu + "' sexo='" + sexo + "' cuit='" + cuit + "'   nro_grupo='" + nro_grupo + "' /></criterio>" })
        }
        else {
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            Evaluar_cr()
        }

    }//evaluar_cs

    var Evaluar_cr = function () {
        nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Obteniendo información de saldos...')
        if (tiene_cr > 0) {
            var strHTMLC = "<table id='tbCred' class='tb1 highlightEven highlightTROver' cellspacing='1' cellpadding='1' style='vertical-align:top;'><tr><td class='Tit1' style='width:10%'>Credito</td><td class='Tit1' width:30%>Banco</td><td class='Tit1' width:30%>Mutual</td><td class='Tit1' style='width:12%;text-align:right'>Cuota</td><td class='Tit1' style='width:13%;text-align:right'>Saldo</td><td class='Tit1' style='width:5%;text-align:center'>C</td></tr>"
            var rsC = new tRS();
            rsC.async = true
            rsC.onError = function (rsCS) {
                rserror_handler("Error al consultar los datos. Intente nuevamente (saldos).")
            }
            rsC.onComplete = function (rsC) {

                while (!rsC.eof()) {
                    i++

                    getCrRelacionados(rsC.getdata('nro_credito'))
                    var ret = getVectorrel(rsC.getdata('nro_credito'))
                    var credrel = null;
                    for (r = 0; r < ret.length; r++) {

                        var ob = ret[r]
                        if (ob.get("nro_credito") == rsC.getdata("nro_credito") && ob.get("estado") == "T") {
                            credrel = ob;
                            break;
                        }
                    }
                    Creditos[i] = {}
                    Creditos[i]['nro_credito'] = rsC.getdata('nro_credito')
                    Creditos[i]['nro_banco'] = rsC.getdata('nro_banco')
                    Creditos[i]['nro_mutual'] = rsC.getdata('nro_mutual')
                    Creditos[i]['importe_cuota'] = (rsC.getdata('nro_calc_tipo') == 4) ? parseFloat(rsC.getdata('importe_cuota_seg')).toFixed(2) : parseFloat(rsC.getdata('importe_cuota')).toFixed(2)
                    if (credrel) {
                        if (credrel.get("mostrarcuota")) {
                            Creditos[i]["importe_cuota"] = credrel.get("importe_cuota")
                        } else {
                            Creditos[i]["importe_cuota"] = 0
                        }

                    }

                    Creditos[i]['saldo'] = parseFloat(rsC.getdata('saldo_importe')).toFixed(2)
                    Creditos[i]['saldo_nro_entidad'] = rsC.getdata('saldo_entidad')
                    Creditos[i]['cancela_vence'] = FechaToSTR(new Date(parseFecha(rsC.getdata('saldo_vencimiento'))))
                    Creditos[i]['cancela_cuota_paga'] = rsC.getdata('cuotas_pagadas')
                    Creditos[i]['nro_credito_seguro'] = rsC.getdata('nro_credito_seguro')
                    Creditos[i]['nro_calc_tipo'] = rsC.getdata('nro_calc_tipo')
                    //Creditos[i]['nro_pago_concepto'] = 2
                    Creditos[i]['cancela'] = false
                    var strChek = ''
                    var strClass = ''
                    strHTMLC += "<tr id='trCr_" + i + "' style='cursor:pointer;' " + strClass + " onclick='btnCancela_onClick(" + i + ")'><td nowrap='true'>" + rsC.getdata('nro_credito') + "</td><td>" + rsC.getdata('banco') + "</td><td nowrap='true'>" + rsC.getdata('mutual') + "</td><td style='text-align:right' nowrap='true'>$ " + Creditos[i]['importe_cuota'] + "</td><td style='text-align:right' nowrap='true'>$ " + parseFloat(rsC.getdata('saldo_importe')).toFixed(2) + "</td><td nowrap='true' style='text-align:center'><input type='checkbox' id='chkCred_" + i + "' style='border:0' " + strChek + " /></td></tr>"
                    rsC.movenext()
                }
                strHTMLC += "</table>"
                if (rsC.recordcount > 0) {
                    $('td_canc_int').show()
                    $('tbCredVigente').insert({ bottom: strHTMLC })
                }

                nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
                SeleccionarPlanesMostrar()
                //CargarBancos()
                //banco_onchange()
                //nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            }
            rsC.open({ filtroXML: nvFW.pageContents["saldos"], params: "<criterio><params nro_docu='" + consulta.cliente.nro_docu + "' tipo_docu='" + consulta.cliente.tipo_docu + "' sexo='" + consulta.cliente.sexo + "' /></criterio>" })
        }
        else {
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            SeleccionarPlanesMostrar()
            //CargarBancos()
            //banco_onchange()
            //nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        }
    }//evaluar_cr



    $('tbCredVigente').innerHTML = ''
    $('tbCredVigente3').innerHTML = ''
    $('tbCuotaSocial').innerHTML = ''
    var i = 0
    Creditos = {}
    if (cr_mes > 0) {
        win_control_cred = createWindow2({
            title: '<b>Control de créditos</b>',
            parentWidthPercent: 0.8,
            //parentWidthElement: $("contenedor"),
            maxWidth: 450,
            maxHeight: 120,
            //centerHFromElement: $("contenedor"),
            minimizable: false,
            maximizable: false,
            draggable: false,
            resizable: true,
            closable: false,
            recenterAuto: true,
            setHeightToContent: true,
            onClose: function () {
                if (opcion_ctrl == 2) {
                    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Obteniendo información del socio...')
                    Evaluar_persona()
                }
                else
                    consulta.limpiar()
            }
        });
        var html = "<html><head></head><body style='width:100%;height:100%;overflow:hidden'>"
        html += "<table class='tb1'>"
        html += "<tr><td colspan=3 class='Tit1'><br>Ya existen créditos ingresados en el mes para el número de documento: <b>" + $('nro_docu1').value + "</b>. Desea ver los créditos o continuar con la carga?</b><br><br></td></tr><table>"
        html += "<table class='tb1'><tr><td style='text-align:center;width:33%'><br><input type='button' style='width:100%; cursor:pointer' value='Ver Créditos' onclick='win_control_cred_cerrar(1)'/></td><td style='text-align:center;width:33%'><br><input type='button' style='width:100%; cursor:pointer' value='Continuar' onclick='win_control_cred_cerrar(2)'/></td><td style='text-align:center;width:33%'><br><input type='button' style='width:100%; cursor:pointer' value='Limpiar' onclick='win_control_cred_cerrar(3)'/></td></tr>"
        html += "</table></body></html>"
        win_control_cred.setHTMLContent(html)
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        win_control_cred.showCenter(true)
    }
    else
        Evaluar_persona()
}

var win_nosis_generar
var btn_aceptar_nosis = false

function win_nosis_generar_cerrar(aceptar) {
    btn_aceptar_nosis = aceptar
    win_nosis_generar.close()
}

function VerInformeNosis() {
    //" (permisos_precarga & 2) <= 0)
    if (!nvFW.tienePermiso("permisos_precarga", 2)) {
        nvFW.alert('No posee permisos para generar el informe')
        return
    }
    if (strHTMLNosis == '') {
        if (dictamen == 'RECHAZADO') {
            nvFW.alert('No se puede generar el informe para una solicitud Rechazada.')
            return
        }
        win_nosis_generar = createWindow2({
            title: '<b>Generar Informe Nosis</b>',
            parentWidthPercent: 0.8,
            //parentWidthElement: $("contenedor"),
            maxWidth: 450,
            maxHeight: 150,
            //centerHFromElement: $("contenedor"),
            minimizable: false,
            maximizable: false,
            draggable: false,
            resizable: true,
            closable: false,
            recenterAuto: true,
            setHeightToContent: true,
            //destroyOnClose: true,
            onClose: function () {
                if (btn_aceptar_nosis)
                    NOSIS_generar_informe2(consulta.cliente.cuit)
            }
        });
        var html = "<html><head></head><body style='width:100%;height:100%;overflow:hidden'>"
        html += "<table class='tb1'><tr><td class='Tit1' style='text.align:center'><br>Desea generar el informe Nosis?<br></td></tr></table></br>"
        html += "<div style='text-align:center;width:49%;float:left'><input type='button' style='width:90%' value='Generar Informe' onclick='win_nosis_generar_cerrar(true)'/></div>"
        html += "<div style='text-align:center;width:49%;float:left'><input type='button' style='width:90%' value='Cancelar' onclick='win_nosis_generar_cerrar(false)'/></div>"
        html += "</body></html>"
        win_nosis_generar.setHTMLContent(html)
        win_nosis_generar.showCenter(true)
    }

    else {
        strHTMLNosis = replace(strHTMLNosis, "undefined", "'")
        mostrarHTMLNosis(strHTMLNosis)
    }
}

var win_error_nosis
function NOSIS_generar_informe2(cuit, reintento) {
    var HTML_bloqueo = "<input type='button' id='btn_cancelar' style='width:20px' value='Detener' style='cursor: pointer !important' />"

    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Generando informe de Nosis&nbsp;&nbsp;&nbsp;<img border="0" id="img_cancelar" src="image/cancel.png" align="absmiddle" title="Cancelar" style="vertical-align:middle; cursor: pointer" />')

    var oXML = new tXML();
    try {
        // mixpanel.track("consultar_nosis"); //registrar el evento consultar_nosis
        var reintentos = "<reintentos>1</reintentos>"
        if (reintento == 0) reintentos = ""

        oXML.async = true
        oXML.method = 'POST'
        oXML.onFailure = function () { nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga') }
        oXML.load('/FW/servicios/NOSIS/GetXML.aspx', 'accion=SAC_informe&criterio=<criterio><cuit>' + cuit + '</cuit><CDA>' + CDA + '</CDA><nro_vendedor>' + consulta.nro_vendedor + '</nro_vendedor><nro_banco>' + campos_defs.get_value("banco") + '</nro_banco>' + reintentos + '</criterio>',
            function () {
                strXML = XMLtoString(oXML.xml)
                NosisXML = strXML
                objXML = new tXML();
                objXML.async = false
                var novedad = ""

                if (objXML.loadXML(strXML))
                    var NODs = objXML.selectNodes('Respuesta/ParteHTML')

                var NOD_novedad = oXML.selectNodes('Respuesta/Consulta/Resultado')
                if (NOD_novedad.length > 0)
                    novedad = XMLText(selectSingleNode('Novedad', NOD_novedad[0]))

                if (NODs[0])
                    strHTMLNosis = XMLText(NODs[0])

                nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')

                if (novedad != "") {
                    //  alert("NOSIS: " + novedad)
                    win_error_nosis = createWindow2({
                        title: '<b>Notificacion nosis</b>',
                        maxWidth: 450,
                        maxHeight: 100,
                        // recenterAuto: true,
                        //  setHeightToContent: true,
                        minimizable: false,
                        maximizable: false,
                        draggable: true,
                        resizable: true
                    });

                    var html = '<html><head></head><body style="width:100%;height:100%;overflow:hidden">'
                    html += '<table class="tb1">'
                    html += '<tbody><tr><td colspan="3">' + novedad + '</td></tr><tr><td colspan="3"></td></tr>'
                    html += '<tr><td style="text-align:center;width:25%"><input type="button" style="width:80%" value="Reintentar" onclick="reintentar(' + consulta.cliente.cuit + ', 1)" style="cursor:pointer" /></td>'
                    html += '<td style = "text-align:center;width:25%" ><input type="button" style="width:80%" value="Generarlo igual" onclick="reintentar(' + consulta.cliente.cuit + ', 0)" style="cursor:pointer" /></td>'
                    html += '<td style = "text-align:center;width:25%" ><input type="button" style="width:80%" value="Cerrar" onclick="win_error_nosis.close()" style="cursor:pointer" /></td></tr > '
                    html += '</tbody></table></body></html>'

                    win_error_nosis.setHTMLContent(html)
                    win_error_nosis.showCenter(true)

                    return
                }

                if (strHTMLNosis == '') {
                    alert("Error al consultar los datos.")
                    return
                }

                strHTMLNosis = replace(strHTMLNosis, "undefined", "'")
                mostrarHTMLNosis(strHTMLNosis)
            }
        )
    } catch (e) {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        alert("Error al generar nosis.")
    }
    $('img_cancelar').observe("click", function () { NOSIS_generar_informe2_cancel(oXML) })
}


function reintentar(cuit, intento) {
    NOSIS_generar_informe2(cuit, intento)
    win_error_nosis.close()
}

function mostrarHTMLNosis(strHTML) {
    if (nvFW.nvInterOP) {
        //window.open("data:text/html;charset=utf-8," + strHTMLNosis, "", "https://nullurl.redmutual.com.ar")
        window.open("_null?content=" + encodeURIComponent(strHTMLNosis))
    } else {
        var win = window.open()
        win.document.write(strHTMLNosis)
    }
}

function NOSIS_generar_informe2_cancel(oXML) {
    try {
        oXML.abort()
    }
    catch (e) { }//divBloq_msg_blq_precarga
    //$("divBloq_" + 'Ajax_bloqueo')._DivMsg.setStyle({ background: "" })
    //$("divBloq_" + 'msg_blq_precarga')._DivMsg.setStyle({ background: "" })
    // nvFW.bloqueo_desactivar(null, 'msg_blq_precarga')
    nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
    // Precarga_Limpiar()
}

function VerCDA(limpiaronclose = false) {

    var winVerCda = nvFW.createWindow({
        width: 400,
        height: 350,
        title: '',
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true,
        onClose: function () {
            if (limpiaronclose) {
                consulta.limpiar()
            }
        }
    })
    winVerCda.setHTMLContent(consulta.resultado.strHTML_CDA)
    winVerCda.showCenter(true)
}



//devuelvo el arreglo de creditos con el que se relaciona, sino devuelvo array vacio
function getVectorrel(nro_credito) {
    var ret = Array()
    var idx = -1
    //si ya existe el credito en alguna relacion de postergaciones, no busco nada
    for (i = 0; i < crPostergaciones.length; i++) {
        var cr = crPostergaciones[i]
        for (var j = 0; j < cr.length; j++) {
            if (cr[j].get("nro_credito") == nro_credito) {
                ret = cr
                break;
            }
        }
        //si ya lo encontro, que salga
        if (ret.length > 0) {
            break;
        }
    }
    return ret;
}

//dado un credito, devuelvo el indice del arreglo donde esta relacionado con otros, sino cargo su relacionados
function getCrRelacionados(nro_credito) {

    var cr = Array()
    var nro_credito_origen = null;
    //si el credito ya esta relacionado con algun vector, no cargo nada
    var ret = getVectorrel(nro_credito)
    if (ret.length > 0) {
        return
    }
    var mostrarcuota = false;
    var rsC0 = new tRS();
    rsC0.async = false;
    rsC0.open({ filtroXML: nvFW.pageContents["postergaciones"], params: "<criterio><params nro_credito='" + nro_credito + "' /></criterio>" })
    if (!rsC0.eof()) {
        nro_credito_origen = rsC0.getdata("credito_origen")
    } else {
        nro_credito_origen = nro_credito
    }
    //agrego el credito originante al vector
    if (nro_credito_origen) {
        var rsC1 = new tRS();
        rsC1.async = false;
        rsC1.open({ filtroXML: nvFW.pageContents["credito_originante"], params: "<criterio><params nro_credito='" + nro_credito_origen + "' /></criterio>" })
        if (!rsC1.eof()) {
            var ocred = {}
            ocred['nro_credito'] = rsC1.getdata("nro_credito")
            ocred['agregado'] = false;
            ocred['estado'] = rsC1.getdata("estado")
            ocred['importe_cuota'] = rsC1.getdata("importe_cuota")
            if (!mostrarcuota && (rsC1.getdata("estado") == "T")) {
                ocred['mostrarcuota'] = true;
                mostrarcuota = true;
            } else {
                ocred['mostrarcuota'] = false;
            }
            cr.push($H(ocred));
        }
    }

    var rsC2 = new tRS();
    rsC2.async = false;
    rsC2.open({ filtroXML: nvFW.pageContents["postergaciones_originante"], params: "<criterio><params credito_origen='" + nro_credito_origen + "' /></criterio>" })
    while (!rsC2.eof()) {
        var ocred = {}
        ocred['nro_credito'] = rsC2.getdata("nro_credito")
        ocred['agregado'] = false;
        ocred['estado'] = rsC2.getdata("estado")
        ocred['importe_cuota'] = rsC2.getdata("importe_cuota")
        if (!mostrarcuota && (rsC2.getdata("estado") == "T")) {
            ocred['mostrarcuota'] = true;
            mostrarcuota = true;
        } else {
            ocred['mostrarcuota'] = false;
        }
        cr.push($H(ocred));
        rsC2.movenext()
    }
    if (cr.length > 1) {
        //agreggo el credito parametro si es que se relaciona con algunos                    
        crPostergaciones.push(cr)
    }

}//getCrRealcionados




function PostergacionAdd(nro_credito) {
    var rel = getVectorrel(nro_credito)
    if (rel.length == 0) return //si el credito no se realciona con nadie, retorna            
    for (var j = 0; j < rel.length; j++) {
        if (rel[j].get("nro_credito") == nro_credito && rel[j].get("agregado")) {
            return; //si ya se agrego, no lo vuelvo a agregar
        }
    }
    for (var r = 0; r < rel.length; r++) {
        if (!rel[r].get('agregado')) {
            var nro_cred = rel[r].get('nro_credito')
            rel[r].set('agregado', true)
            for (var k in Creditos) {
                if (Creditos[k]['nro_credito'] == nro_cred && nro_credito != nro_cred) {
                    btnCancela_onClick(k)
                    break
                }
            }
        }
    }

}


function PostergacionRemove(nro_credito) {
    var rel = getVectorrel(nro_credito)
    if (rel.length == 0) return //si el credito no se realciona con nadie, retorna            
    for (var j = 0; j < rel.length; j++) {
        if (rel[j].get("nro_credito") == nro_credito && !rel[j].get("agregado")) {
            return; //si ya se elimino, no lo vuelvo a eliminar
        }
    }
    for (var r = 0; r < rel.length; r++) {
        if (rel[r].get('agregado')) {
            var nro_cred = rel[r].get('nro_credito')
            rel[r].set('agregado', false)
            for (var k in Creditos) {
                if (Creditos[k]['nro_credito'] == nro_cred && nro_credito != nro_cred) {
                    btnCancela_onClick(k)
                    break
                }
            }
        }
    }
}//PostergacionRemove

var Cancelaciones = {}
function btnCancela_onClick(i) {
    var tr = $('trCr_' + i)
    if (tr.className == 'Tit3') {
        tr.removeClassName('Tit3')
        $('chkCred_' + i).checked = false
        PostergacionRemove(Creditos[i]['nro_credito'])
    }
    else {
        tr.addClassName('Tit3')
        $('chkCred_' + i).checked = true
        PostergacionAdd(Creditos[i]['nro_credito'])
    }
    TotalCancelaciones1 = 0
    LiberaCuota = 0

    //Si tiene seguro forzar la selección
    for (var j in Creditos) {
        if (j != i) {
            if ((Creditos[j]['nro_credito_seguro'] != 0) && (Creditos[i]['nro_credito_seguro'] == Creditos[j]['nro_credito_seguro'])) {
                var trS = $('trCr_' + j)
                if ($('chkCred_' + i).checked == true) {
                    trS.addClassName('Tit3')
                    $('chkCred_' + j).checked = true
                    Creditos[j]['cancela'] = true
                }
                else {
                    trS.removeClassName('Tit3')
                    $('chkCred_' + j).checked = false
                    Creditos[j]['cancela'] = false
                }
            }
        }
    }

    for (var x in Creditos) {
        if (x == i)
            if ($('chkCred_' + i).checked == true)
                Creditos[x]['cancela'] = true
            else
                Creditos[x]['cancela'] = false
        if (Creditos[x]['cancela'] == true) {
            TotalCancelaciones1 = parseFloat(parseFloat(TotalCancelaciones1) + parseFloat(Creditos[x]['saldo'])).toFixed(2)
            LiberaCuota = parseFloat(parseFloat(LiberaCuota) + parseFloat(Creditos[x]['importe_cuota'])).toFixed(2)
        }
    }
    importe_max_cuota = parseFloat(parseFloat(cupo_disponible) + parseFloat(LiberaCuota)).toFixed(2)
    importe_mano = 0
    importe_mano = importe_neto - gastoscomerc - TotalCancelaciones1
    $('strEnMano').innerHTML = ''
    $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })


    Cancelaciones = {}
    var j = 0
    for (var x in Creditos) {
        if (Creditos[x]['cancela'] == true) {
            j++
            Cancelaciones[j] = {}
            Cancelaciones[j]['cancela_cuota'] = Creditos[x]['importe_cuota']
            Cancelaciones[j]['cancela_cupo'] = 0
            Cancelaciones[j]['importe_pago'] = Creditos[x]['saldo']
        }
    }
    saldo_a_cancelar = parseFloat(TotalCancelaciones1)
    $('saldo_a_cancelar').innerHTML = ''
    $('saldo_a_cancelar').insert({ bottom: parseFloat(TotalCancelaciones1).toFixed(2) })
    analisis_actualizar(false)
    if (nro_grupo == 0)
        Validar_datos()
}

var plan_lineas = ''
var noti_prov = false
var nro_credito_random = 0

function win_sel_cp_onclick(aceptar) {
    if (persona_existe == true) {
        if ($('chk_noti_prov').checked)
            if (cod_prov_persona == campos_defs.get_value('cod_provincia')) {//$('cbprov').value) {
                nvFW.alert('La provincia seleccionada es la misma que la propuesta.<br>Para notificar el cambio debe seleccionar otra. Verifique.')
                return
            }
        noti_prov = $('chk_noti_prov').checked
    }
    if (campos_defs.get_value('cod_provincia') == '') {
        alert("Debe seleccionar la provincia de residencia")
        return
    }
    cod_prov_persona = campos_defs.get_value('cod_provincia') // $('cbprov').value
    btn_sel_cp_aceptar = aceptar
    win_sel_cp.close()
}

function chk_noti_prov_on_click() {
    if ($('chk_noti_prov').checked)
        campos_defs.habilitar('cod_provincia', true)   //$('cbprov').enable()
    else {
        campos_defs.set_value('cod_provincia', cod_prov_persona)  //$('cbprov').value = cod_prov_persona
        campos_defs.habilitar('cod_provincia', false) //$('cbprov').disable()
    }
}

var win_sel_cp
var btn_sel_cp_aceptar = false

var win_files
var nro_archivo_noti_prov = 0

function ABMArchivos_return() {
    var retorno = win_files.options.userData.res
    if (retorno == undefined) {
        nvFW.alert('Debe adjuntar un servicio para notificar el cambio de provincia.')
        consulta.limpiar()
    }
    var sucess = retorno['sucess']
    nro_archivo_noti_prov = retorno['nro_archivo']
    if (sucess == true) {
        nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Buscando información del producto...(01)')
        $('divProducto').show()
        $('divFiltros').show()
        if (nro_grupo != 0) {
            $('ifrplanes').hide()
            $('tbfiltros').hide()
            $('selplan').hide()
            $('selplan').setStyle({ display: 'inline' })
        }
        else {
            $('ifrplanes').show()
            $('tbfiltros').show()
            $('selplan').setStyle({ display: 'none' })
        }
        $('tbButtons').show()
        $('strEnMano').innerHTML = ''
        $('chkmax_disp').checked = true
        $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })
        importe_max_cuota = parseFloat(parseFloat(cupo_disponible) + parseFloat(LiberaCuota)).toFixed(2)
        var socio = false
        for (var j in Creditos) {
            if (Creditos[j]['nro_banco'] == 200 && Creditos[j]['nro_mutual'] == campos_defs.get_value('mutual')) {
                socio = true
                break
            }
        }
        if (!socio)
            importe_max_cuota = parseFloat(parseFloat(importe_max_cuota) - parseFloat(importe_cuota_social)).toFixed(2)
        //  $('banco').options.length = 0
        //  $('mutual').options.length = 0
        campos_defs.clear('banco')
        campos_defs.clear('mutual')
        CargarBancos(banco_onchange)
    }
    else {
        nvFW.alert('Debe adjuntar un servicio para notificar el cambio de provincia.')
        consulta.limpiar()
    }
}

function SeleccionarPlanesMostrar() {
    win_sel_cp = new Window({
        className: 'alphacube',
        title: '<b>Seleccionar Provincia</b>',
        parentWidthPercent: 0.8,
        //parentWidthElement: $("contenedor"),
        maxWidth: 430,
        width: 250,
        maxHeight: 220,
        //centerHFromElement: $("contenedor"),
        minimizable: false,
        maximizable: false,
        draggable: false,
        resizable: true,
        closable: false,
        recenterAuto: true,
        setHeightToContent: true,
        //destroyOnClose: true,
        onShow: function () {
            campos_defs.add('cod_provincia', { target: 'tbProv', enDB: false, nro_campo_tipo: 1, filtroXML: nvFW.pageContents["provincia"] })
            var rsG = new tRS()
            rsG.open({ filtroXML: nvFW.pageContents["grupo_provincia"], params: "<criterio><params nro_grupo='" + nro_grupo + "' cod_prov='" + cod_prov_op + "' /></criterio>" })
            if (!rsG.eof()) {
                campos_defs.set_value('cod_provincia', rsG.getdata('cod_prov'))
            }
        },
        onClose: function () {
            if (btn_sel_cp_aceptar) {
                if (noti_prov == true) {
                    var param = {}
                    param['nro_credito'] = 0
                    win_files = window.top.nvFW.createWindow({
                        url: 'ABMDocumentos_prov.aspx',
                        title: '<b>Adjuntar Servicio</b>',
                        //centerHFromElement: window.top.$("contenedor"),
                        //parentWidthElement: window.top.$("contenedor"),
                        //parentWidthPercent: 0.9,
                        //parentHeightElement: window.top.$("contenedor"),
                        //parentHeightPercent: 0.9,
                        maxHeight: 150,
                        minimizable: false,
                        maximizable: false,
                        draggable: true,
                        resizable: true,
                        onClose: ABMArchivos_return
                    });
                    win_files.options.userData = { param: param }
                    win_files.showCenter(true)
                }
                else {
                    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Buscando información del producto...(02)')
                    $('divProducto').show()
                    $('divFiltros').show()
                    if (nro_grupo != 0) {
                        $('ifrplanes').hide()
                        $('tbfiltros').hide()
                        $('selplan').hide()
                        $('selplan').setStyle({ display: 'inline' })
                    }
                    else {
                        $('ifrplanes').show()
                        $('tbfiltros').show()
                        $('selplan').setStyle({ display: 'none' })
                    }
                    $('tbButtons').show()

                    $('strEnMano').innerHTML = ''
                    $('chkmax_disp').checked = true

                    $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })
                    importe_max_cuota = parseFloat(parseFloat(cupo_disponible) + parseFloat(LiberaCuota)).toFixed(2)
                    var socio = false
                    for (var j in Creditos) {
                        if (Creditos[j]['nro_banco'] == 200 && Creditos[j]['nro_mutual'] == campos_defs.get_value('mutual')) {
                            socio = true
                            break
                        }
                    }
                    if (!socio)
                        importe_max_cuota = parseFloat(parseFloat(importe_max_cuota) - parseFloat(importe_cuota_social)).toFixed(2)

                    //     $('banco').options.length = 0
                    //    $('mutual').options.length = 0
                    campos_defs.clear('banco')
                    campos_defs.clear('mutual')
                    if (dictamen == 'RECHAZADO' || motor.tiene_mensaje())
                        VerCDA()

                    CargarBancos(banco_onchange)
                }

            }
            else
                consulta.limpiar()
        }
    });
    var html = ""
    if (persona_existe == false) {
        html = "<html><head></head><body style='width:100%;height:100%;overflow:hidden'>"
        html += "<table class='tb1' style='width:100%'>"
        html += "<tbody><tr><td colspan=2 class='Tit1'><br><b>Seleccione la provincia de residencia de la persona. (Debe coincidir con la del servicio a presentar).</b><br><br></td></tr>"
        html += "<tr><td style='width:30%'>Provincia:</td><td id='tbProv' style='width:70%'>" //<select id='cbprov' style='width:100%'>"
        html += "</td></tr>"


        /*           var rs = new tRS()
                       var prov_sel = ""
                       var encontro = false
                       rs.open({ filtroXML: nvFW.pageContents["provincia"] })
                       while (!rs.eof()) {
                           prov_sel = ""
                           if (!encontro) {
                               var rsG = new tRS()
                               rsG.open({ filtroXML: nvFW.pageContents["grupo_provincia"], params: "<criterio><params nro_grupo='" + nro_grupo + "' cod_prov='" + rs.getdata('cod_prov') + "' /></criterio>" })
                               if (!rsG.eof()) {
                                   prov_sel = "selected"
                                   encontro = true
                               }
                           }
                           if (!encontro)
                               prov_sel = (rs.getdata('cod_prov') == cod_prov_op) ? "selected" : ""
                           html += "<option id='" + rs.getdata('cod_prov') + "' value='" + rs.getdata('cod_prov') + "' " + prov_sel + ">" + rs.getdata('provincia') + "</option>"
                           rs.movenext()
                       }
                   html += "</select></td></tr>"   */
        html += "<tr><td style='text-align:center;width:50%' colspan='2'><br><input type='button' value='Aceptar' style='width:50%' onclick='win_sel_cp_onclick(true)'/><br></td></tr>"
        html += "</tbody></table></body></html>"
        // 
        win_sel_cp.setHTMLContent(html)
        win_sel_cp.showCenter(true)


    }
    else {
        nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Buscando información del producto...(03)')
        $('divProducto').show()
        $('divFiltros').show()
        if (nro_grupo != 0) {
            $('ifrplanes').hide()
            $('tbfiltros').hide()
            $('selplan').hide()
            $('selplan').setStyle({ display: 'inline' })
        }
        else {
            $('ifrplanes').show()
            $('tbfiltros').show()
            $('selplan').setStyle({ display: 'none' })
        }
        $('tbButtons').show()
        $('strEnMano').innerHTML = ''
        $('chkmax_disp').checked = true
        $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })
        importe_max_cuota = parseFloat(parseFloat(cupo_disponible) + parseFloat(LiberaCuota)).toFixed(2)
        var socio = false
        for (var j in Creditos) {
            if (Creditos[j]['nro_banco'] == 200 && Creditos[j]['nro_mutual'] == campos_defs.get_value('mutual')) {
                socio = true
                break
            }
        }
        if (!socio)
            importe_max_cuota = parseFloat(parseFloat(importe_max_cuota) - parseFloat(importe_cuota_social)).toFixed(2)

        campos_defs.clear('banco')
        campos_defs.clear('mutual')
        if (dictamen == 'RECHAZADO' || motor.tiene_mensaje())
            VerCDA()

        CargarBancos(banco_onchange)
    }
}//SeleccionarPlanesMostrar

var aux_valor_banco_old = ''
function CargarBancos(banco_onchange) {

    var nro_banco_first = ""
    //si hubo ofertas, es porque vino desde el motor, sino busco los cambios segun consulta a la BD que va por el camino tradicional
    var hayofertasmotor = motor.tiene_ofertas()
    campos_defs.habilitar("banco", true)
    campos_defs.clear_list("banco")
    var rs = new tRS()
    var i = 0
    rs.async = true
    rs.onError = function (rs) {
        rserror_handler("Error al consultar los datos. Intente nuevamente (operatoria_bancos).")
    }
    rs.onComplete = function (rs) {
        campos_defs.items['banco'].rs = rs
        campos_defs.set_first('banco')
        if (nro_banco_first != "") {
            campos_defs.set_value("banco", nro_banco_first)
        }
        if (rs.recordcount == 1) campos_defs.habilitar("banco", false)
        else campos_defs.habilitar("banco", true)
    }


    if (!hayofertasmotor) {
        if (!sit_bcra) {
            sit_bcra = motor.datos['bcra_sit']
        }
        rs.open({ filtroXML: nvFW.pageContents["operatoria_bancos"], params: "<criterio><params sit_bcra='" + sit_bcra + "' nro_grupo='" + nro_grupo + "' nro_tipo_cobro='" + nro_tipo_cobro + "' nro_banco_cobro='" + nro_banco_cobro + "' /></criterio>" })
    } else {
        //filtro los arreglos que no tengan estado
        var aBancos = motor['ofertas'].filter(that => that.estado != null)
        //ordeno por campo orden            (de menor a mayor)
        aBancos.sort(function (a, b) {
            if (a.orden > b.orden) {
                return 1;
            }
            if (a.orden < b.orden) {
                return -1;
            }
            // a must be equal to b
            return 0;
        }) //sort

        if (aBancos.length > 0) {
            nro_banco_first = aBancos[0].nro_banco.toString()
        }
        var bancos = (aBancos.map(item => item.nro_banco)).toString() //obtengo nro_bancos los bancos
        rs.open({ filtroXML: nvFW.pageContents["operatoria_bancos_manual"], params: "<criterio><params sit_bcra='" + sit_bcra + "'  nro_bancos='" + bancos + "' /></criterio>" })
    }//hayofertasmotor


}

function inaes_black_list(nro_banco) {
    if (nro_banco != 800) return false;
    var rs = new tRS()
    rs.async = false
    //var cuit=$("cuit").value
    rs.open({ filtroXML: nvFW.pageContents["inaes_black_list"], params: "<criterio><params CUIT='" + consulta.cliente.cuit + "' /></criterio>" })
    return (!rs.eof())

}

function banco_onchange() {

    var nro_banco_filtro = campos_defs.get_value('banco')//$('banco').value

    if (nro_banco_filtro == aux_valor_banco_old) {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga');
        return
    }
    /*if(inaes_black_list(nro_banco_filtro)){
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga');
        alert("Persona bloqueada para alta en voii. Seleccione otro Banco")
        if(aux_valor_banco_old!=800 && aux_valor_banco_old!=""){
        campos_defs.set_value('banco',aux_valor_banco_old)       
        }
        return
    }*/

    campos_defs.habilitar("mutual", true)
    campos_defs.clear_list("mutual")
    campos_defs.habilitar("cbAnalisis", true)
    campos_defs.clear_list("cbAnalisis")

    if (nro_banco_filtro != '') {
        CargarMutuales(nro_banco_filtro, mutual_onchange)
    }
    else {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
    }
    aux_valor_banco_old = nro_banco_filtro

}
var aux_valor_mutual_old = ''
function CargarMutuales(nro_banco_filtro, mutual_onchange) {
    campos_defs.clear("mutual")
    //si hubo ofertas, es porque vino desde el motor, sino busco los cambios segun consulta a la BD que va por el camino tradicional
    if (typeof motor['ofertas'] != "undefined") {
        hayofertasmotor = (motor['ofertas'].length > 0)
    }
    var i = 0
    var sel = false
    var rs = new tRS();
    rs.async = true
    rs.onError = function (rs) {
        rserror_handler("Error al consultar los datos. Intente nuevamente (operatoria_mutuales).")
    }
    rs.onComplete = function (rs) {

        campos_defs.items['mutual'].rs = rs
        campos_defs.set_first('mutual')
        if (rs.recordcount == 1) campos_defs.habilitar("mutual", false)
        else campos_defs.habilitar("mutual", true)
    }
    if (!hayofertasmotor) {
        rs.open({ filtroXML: nvFW.pageContents["operatoria_mutuales"], params: "<criterio><params nro_grupo='" + nro_grupo + "' nro_tipo_cobro='" + nro_tipo_cobro + "' nro_banco_cobro='" + nro_banco_cobro + "' nro_banco='" + nro_banco_filtro + "' /></criterio>" })
    } else {
        var ofertasporbanco = motor['ofertas'].filter(oferta => oferta.nro_banco == nro_banco_filtro) //obtengo los array de ofertas que tengan el banco en cuestion
        var mutuales = (ofertasporbanco.map(item => item.nro_mutual)).toString() //obtengo las mutuales involucradas en las ofertas, segun banco seleccionado                    
        rs.open({ filtroXML: nvFW.pageContents["operatoria_mutuales_manual"], params: "<criterio><params nro_mutuales='" + mutuales + "' /></criterio>" })
    }

}//CargarMutuales

var importe_cuota_social = 0
var importe_cs_analisis = 0

function mutual_onchange() {
    var rs_cs = new tRS();
    importe_cuota_social = 0
    importe_cs_analisis = 0
    if (campos_defs.get_value('mutual') == aux_valor_mutual_old) {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga');
        return
    }

    campos_defs.habilitar("cbAnalisis", true)
    campos_defs.clear_list("cbAnalisis")
    rs_cs.open({ filtroXML: nvFW.pageContents["mutual_cuota"], params: "<criterio><params nro_mutual='" + campos_defs.get_value('mutual') + "' nro_grupo='" + nro_grupo + "' /></criterio>" })
    if (!rs_cs.eof())
        importe_cuota_social = parseFloat(rs_cs.getdata('importe_cuota_social')).toFixed(2)
    $('strEnMano').innerHTML = ''
    importe_mano = 0
    $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })
    importe_max_cuota = parseFloat(parseFloat(cupo_disponible) + parseFloat(LiberaCuota)).toFixed(2)
    var socio = false
    for (var j in Creditos) {
        if (Creditos[j]['nro_banco'] == 200 && Creditos[j]['nro_mutual'] == campos_defs.get_value('mutual')) {
            socio = true
            break
        }
    }
    if (!socio) {
        importe_cs_analisis = parseFloat(importe_cuota_social).toFixed(2)
        importe_max_cuota = parseFloat(parseFloat(importe_max_cuota) - parseFloat(importe_cuota_social)).toFixed(2)
    }
    var j = 0
    for (var x in Creditos) {
        if (Creditos[x]['cancela'] == true) {
            j++
            Cancelaciones[j]['cancela_cuota'] = Creditos[x]['importe_cuota']
            Cancelaciones[j]['cancela_cupo'] = 0
            Cancelaciones[j]['importe_pago'] = Creditos[x]['saldo']
        }
    }
    $('divHaberes').innerHTML = ""
    $('divHaberesNoVisibles').innerHTML = ""
    $('ifrplanes').src = 'enBlanco.htm'

    $('divAnalisis').show()

    if (motor.tiene_ofertas()) {
        var ofertaMotor = motor.ofertas.filter(oferta => oferta.nro_banco == campos_defs.get_value("banco") && oferta.nro_mutual == campos_defs.get_value("mutual"))
        if (ofertaMotor.length > 0) {
            nro_analisis = ofertaMotor[0].nro_analisis
        }
    }
    CargarAnalisis(nro_analisis)
    //if ((nro_tipo_cobro == 1) && (tiene_cupo) &&  campos_defs.get_value("mutual") != '') {
    //        $('selplan').checked = true
    //        selplan_on_click()
    //        $('chkmax_disp').checked = true
    //        btnBuscarPLanes_onclick()
    //    }
    aux_valor_mutual_old = campos_defs.get_value("mutual")
    nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')

}//mutual_onchange

function win_edad_cerrar(aceptar) {
    if (aceptar) {
        if ($('fe_naci').value == '') {
            nvFW.alert('Ingrese la fecha de nacimiento.')
            return
        }
    }
    btn_aceptar = aceptar
    win_edad.close()
}

var win_edad
var btn_aceptar = false

function getEdad(dateString) {
    var dia = dateString.substring(0, dateString.indexOf("/"))
    var mes = dateString.substring(dateString.indexOf("/") + 1, dateString.indexOf("/", dateString.indexOf("/") + 1))
    var anio = dateString.substring(dateString.indexOf("/", dateString.indexOf("/") + 1) + 1, dateString.length)
    dateString = mes + "/" + dia + "/" + anio
    var today = new Date();
    var birthDate = new Date(dateString);
    var age = today.getFullYear() - birthDate.getFullYear();
    var m = today.getMonth() - birthDate.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
        age--;
    }
    return age;
}

function Validar_datos() {
    if (consulta.cliente.fe_naci == '') {
        consulta.cliente.fe_naci = fe_naci_socio
        edad = edad_socio
        //$('strFNac').innerHTML = ''
        //$('strFNac').insert({ bottom: consulta.cliente.fe_naci + ' (' + edad + ')' })
    }

    if (consulta.cliente.fe_naci == '') {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        win_edad = createWindow2({
            title: '<b>No se pudo obtener la edad de la persona</b>',
            parentWidthPercent: 0.8,
            //parentWidthElement: $("contenedor"),
            maxWidth: 450,
            //centerHFromElement: $("contenedor"),
            minimizable: false,
            maximizable: false,
            draggable: false,
            resizable: true,
            closable: false,
            recenterAuto: true,
            setHeightToContent: true,
            onClose: function () {
                consulta.cliente.fe_naci = $('fe_naci').value
                consulta.cliente.edad = getEdad(consulta.cliente.fe_naci)
                $('strFNac').innerHTML = ''
                $('strFNac').insert({ bottom: consulta.cliente.fe_naci + ' (' + edad + ')' })
                if (btn_aceptar) {
                    if ((nro_mutual == '') || (nro_banco == '')) btnBuscarPLanes_onclick()
                }

            }
        });
        var html = '<html><head></head><body style="width:100%;height:100%;overflow:hidden">'
        html += '<table class="tb1">'
        html += '<tbody><tr><td class="Tit1"><b>Ingrese la fecha de nacimiento</b></td><td><input type="text" value="" id="fe_naci" style="width:100%" onkeypress="return valDigito(event, \'/\')" onchange="valFecha(event)" /></td></tr>'
        html += '<tr><td style="text-align:center;width:50%"><br><input type="button" style="width:80%" value="Cancelar" onclick="win_edad_cerrar(false)" style="cursor:pointer" /></td><td style="text-align:center;width:50%"><br><input type="button" style="width:80%" value="Aceptar" onclick="win_edad_cerrar(true)" style="cursor:pointer"/></td></tr>'
        html += '</tbody></table></body></html>'

        win_edad.setHTMLContent(html)
        win_edad.showCenter(true)
    }
    else
        btnBuscarPLanes_onclick()
}

var nro_banco_debito
var strWhere_planes = ''

function btnBuscarPLanes_onclick() {
    //nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
    console.log("carga de planes")
    strWhere_planes = ''

    var nro_mutual = campos_defs.get_value('mutual') //$('mutual').value
    var nro_banco = campos_defs.get_value('banco') // $('banco').value
    if ($('selplan').checked) {
        if ((nro_mutual == '') || (nro_banco == '')) {
            nvFW.alert('Debe seleccionar un banco/mutual para realizar la búsqueda')
            return
        }
        else {
            if ((!$('chkmax_disp').checked) && (($('retirado_desde').value == '') && ($('retirado_hasta').value == '') && ($('importe_cuota_desde').value == '') && ($('importe_cuota_hasta').value == '') && ($('cuota_desde').value == '') && ($('cuota_hasta').value == ''))) {
                nvFW.alert('Ingrese algún filtro para realizar la búsqueda.')
                return
            }
            else {

                var strTop = ''
                if ((nro_grupo == 0) || (nro_grupo == 90) || (nro_grupo == 93)) {
                    strWhere_planes += "<nro_sistema type='igual'>" + nro_sistema + "</nro_sistema>"
                    strWhere_planes += "<nro_lote type='igual'>" + nro_lote + "</nro_lote>"
                }
                else
                    strWhere_planes += "<nro_grupo type='igual'>" + nro_grupo + "</nro_grupo>"

                strWhere_planes += "<nro_mutual type='igual'>" + nro_mutual + "</nro_mutual>"
                strWhere_planes += "<nro_banco type='igual'>" + nro_banco + "</nro_banco>"
                strWhere_planes += "<marca type='igual'>'S'</marca>"
                strWhere_planes += "<falta type='menos'>getdate()</falta>"
                strWhere_planes += "<fbaja type='sql'>(fbaja > getdate() or fbaja is null)</fbaja>"
                strWhere_planes += "<vigente type='igual'>1</vigente>"
                strWhere_planes += "<nro_tabla_tipo type='igual'>1</nro_tabla_tipo>"
                strWhere_planes += "<nro_circuito type='distinto'>11</nro_circuito>"

                var campo_max
                var campo_min
                if (consulta.cliente.sexo == 'M') {
                    campo_max = 'edad_max_masc'
                    campo_min = 'edad_min_masc'
                }
                else {
                    campo_max = 'edad_max_fem'
                    campo_min = 'edad_min_fem'
                }

                //strWhere_planes += "<sql type='sql'><![CDATA[datediff(year," + ajustarFecha(fe_naci) + ", getdate()) >= " + campo_min + "]]></sql>"
                strWhere_planes += "<sql type='sql'><![CDATA[datepart(YYYY,getdate()) - datepart(YYYY," + ajustarFecha(consulta.cliente.fe_naci) + ") - case when datepart(dy, getdate()) < datepart(dy, " + ajustarFecha(consulta.cliente.fe_naci) + ") then 1 else 0 end >= " + campo_min + "]]></sql>"

                strWhere_planes += "<sql type='sql'><![CDATA[datediff(year, " + ajustarFecha(consulta.cliente.fe_naci) + ", dateadd(month, cuotas, dbo.rm_primervencimiento(getdate(), nro_plan))) <= " + campo_max + "]]></sql>"

                var maxImporte = TotalCancelaciones1

                if (!$('chkFiltroCuenta').checked) {
                    if (nro_banco_debito != undefined)
                        strWhere_planes += "<sql type='sql'><![CDATA[((nro_tipo_cobro = 4 and nro_banco_debito = " + nro_banco_debito + ") or (nro_tipo_cobro <> 4))]]></sql>"
                }

                if (!$('chkFiltroBCRA').checked) {
                    if (sit_bcra != undefined)
                        strWhere_planes += "<sql type='sql'><![CDATA[((sitbcra_max is null) or (" + sit_bcra + " between sitbcra_min and sitbcra_max))]]></sql>"
                }

                strWhere_planes += "<sql type='sql'><![CDATA[((nro_tipo_cobro in (1,4) and (cod_prov = " + cod_prov_persona + " or cod_prov = 0 or cod_prov is null)) or (nro_tipo_cobro not in (1,4)) )]]></sql>"

                strWhere_planes += "<sql type='sql'>nro_comercio is null</sql>"

                if (nro_mutual == 168) {
                    strWhere_planes += "<sql type='sql'><![CDATA[importe_cuota <= " + importe_max_cuota + " - dbo.piz5D_money ('cuota_credito2',importe_bruto,cuotas,nro_banco,nro_mutual,nro_grupo) and dbo.rm_plan_mupresar_validar (" + consulta.cliente.nro_docu + ",importe_bruto,cuotas,nro_banco,nro_mutual,nro_grupo)=0]]></sql>"
                }





                if ($('retirado_desde').value != "")
                    if (parseFloat($('retirado_desde').value) > parseFloat(TotalCancelaciones1))
                        maxImporte = $('retirado_desde').value

                strWhere_planes += "<importe_neto type='mas'>" + maxImporte + "</importe_neto>"

                if (tiene_seguro == 1)
                    strWhere_planes += "<sql type='sql'>importe_neto >= dbo.piz4D_money ('monto_seguro',nro_banco,nro_mutual,nro_grupo,importe_bruto)</sql>"


                if ($('retirado_hasta').value != '')
                    strWhere_planes += "<importe_neto type='menos'>" + $('retirado_hasta').value + "</importe_neto>"
                if ($('importe_cuota_desde').value != '')
                    strWhere_planes += "<importe_cuota type='mas'>" + $('importe_cuota_desde').value + "</importe_cuota>"
                if ($('importe_cuota_hasta').value != '')
                    strWhere_planes += "<importe_cuota type='menos'>" + $('importe_cuota_hasta').value + "</importe_cuota>"
                if ($('cuota_desde').value != '')
                    strWhere_planes += "<cuotas type='mas'>" + $('cuota_desde').value + "</cuotas>"
                if ($('cuota_hasta').value != '')
                    strWhere_planes += "<cuotas type='menos'>" + $('cuota_hasta').value + "</cuotas>"


                var nro_tipo_cobro = campos_defs.get_value('nro_tipo_cobro_precarga')
                if (nro_tipo_cobro != "")
                    strWhere_planes += "<nro_tipo_cobro type='in'>" + nro_tipo_cobro + "</nro_tipo_cobro>"

                //esto se coloca antes por si existe previamente
                //ya que esta funcion se ejecuta dentro de aca mismo varias veces a la vez y es asyncrono
                nvFW.bloqueo_desactivar($('ifrplanes'), 'blq_precarga_planes')
                nvFW.bloqueo_activar($('ifrplanes'), 'blq_precarga_planes', 'buscando planes...')
                var fxOnComplete = function () {
                    nvFW.bloqueo_desactivar($('ifrplanes'), 'blq_precarga_planes')
                    var tbCabe_h = $('ifrplanes').contentWindow.document.getElementById('tbCabe').getHeight()
                    var div_lst_creditos_h = $('ifrplanes').contentWindow.document.getElementById('div_lst_creditos').getHeight()
                    var div_pag_h = $('ifrplanes').contentWindow.document.getElementById('div_pag').getHeight()
                    $('ifrplanes').setStyle({ height: tbCabe_h + div_lst_creditos_h + div_pag_h + 25 + 'px' })
                    console.log("fin carga de planes")
                    return true;
                }



                var params = "<criterio><params fe_naci='" + consulta.cliente.fe_naci + "' tiene_seguro='" + tiene_seguro + "' /></criterio>"
                if ($('chkmax_disp').checked) {

                    if (nro_mutual == 168) {
                        var rs = new tRS();
                        rs.async = true
                        rs.open(nvFW.pageContents.max_cuota_plan, "", strWhere_planes)
                        rs.onComplete = function (rs) {
                            var importe_cuota_maxplan = "0";
                            while (!rs.eof()) {
                                importe_cuota_maxplan += (importe_cuota_maxplan != "") ? "," + rs.getdata("importe_cuota") : rs.getdata("importe_cuota")
                                rs.movenext()
                            }

                            strWhere_planes += "<importe_cuota type='in'>" + importe_cuota_maxplan + "</importe_cuota>"
                            strWhere_planes += "<importe_neto type='mas'>" + maxImporte + "</importe_neto>"
                            if (motor.datos['evalua_motor'] == 1 && $('cuota_hasta').value != '') {
                                strWhere_planes += "<cuotas type='menos'>" + $('cuota_hasta').value + "</cuotas>"
                            }
                            drawplanes(strWhere_planes, params, fxOnComplete)
                        }
                    } else {
                        var strIn = '(Select max(importe_cuota) from planes where planes.nroTabla = verPlanes_lotes_v4.nroTabla and planes.importe_cuota <= ' + importe_max_cuota + ')'
                        strWhere_planes += "<importe_cuota type='igual'><![CDATA[" + strIn + "]]></importe_cuota>"
                        strWhere_planes += "<importe_neto type='mas'>" + maxImporte + "</importe_neto>"
                        if (motor.datos['evalua_motor'] == 1 && $('cuota_hasta').value != '') {
                            strWhere_planes += "<cuotas type='menos'>" + $('cuota_hasta').value + "</cuotas>"
                        }
                        drawplanes(strWhere_planes, params, fxOnComplete)
                    }

                } else { //chkmax_disp

                    strWhere_planes += "<importe_cuota type='menos'>" + importe_max_cuota + "</importe_cuota>"
                    drawplanes(strWhere_planes, params, fxOnComplete)
                }//chkmax_disp

                //strWhere_planes += "<nroTabla type='sql'>dbo.rm_tabla_permiso_estructura (" + nro_operador + ",nroTabla) = 1</nroTabla>"
                //strWhere_planes += "<socio type='sql'>dbo.rm_tabla_socio_nuevo (nroTabla," + nro_docu + "," + tipo_docu + ",'" + sexo + "') = 1</socio>"

                //                                if ((nro_tipo_cobro != "") && (nro_tipo_cobro == 1))
                //                                    strWhere_planes += "<nro_tipo_cobro type='in'>1,5</nro_tipo_cobro>"
                //                                else
                //                                    strWhere_planes += "<nro_tipo_cobro type='in'>" + nro_tipo_cobro + "</nro_tipo_cobro>"
                //var ele=$(document.documentElement)
                //nvFW.bloqueo_activar(ele, 'blq_precarga_planes','buscando planes')
                //var that=nvFW








            }

        }
    }
}

function drawplanes(strWhere_planes, params, fxOnComplete = () => { }) {

    var filtroXML = nvFW.pageContents.planes_lotes
    nvFW.exportarReporte({
        filtroXML: filtroXML,
        filtroWhere: "<criterio><select><filtro>" + strWhere_planes + "</filtro></select></criterio>",
        params: params,
        path_xsl: 'report/verPlanes_lotes/lst_planes_precarga_HTML.xsl',
        formTarget: 'ifrplanes',
        //bloq_msg: 'Buscando planes...',
        //bloq_contenedor: $('ifrplanes'),
        async: true,
        nvFW_mantener_origen: true,
        funComplete: function (e) {
            /*nvFW.bloqueo_desactivar($('ifrplanes'), 'blq_precarga_planes') 
            var tbCabe_h = $('ifrplanes').contentWindow.document.getElementById('tbCabe').getHeight()
            var div_lst_creditos_h = $('ifrplanes').contentWindow.document.getElementById('div_lst_creditos').getHeight()
            var div_pag_h = $('ifrplanes').contentWindow.document.getElementById('div_pag').getHeight()
            $('ifrplanes').setStyle({ height: tbCabe_h + div_lst_creditos_h + div_pag_h + 25 + 'px' })
            console.log("fin carga de planes")                                
            return true;*/
            fxOnComplete()
        }
    })
}



var importe_neto = 0
var gastoscomerc = 0
var importe_mano = 0

function btnSelPlan_onclick(nro_plan, importe_neto1, importe_bruto, cuotas, importe_cuota, plan_banco, nro_tipo_cobro, gastoscomerc) {
    importe_neto = importe_neto1
    gastoscomerc = gastoscomerc
    form1.importe_cuota.value = importe_cuota
    importe_mano = importe_neto1 - gastoscomerc - TotalCancelaciones1
    $('strEnMano').innerHTML = ''
    $('strEnMano').insert({ bottom: '$ ' + parseFloat(importe_mano).toFixed(2) })
    $("importe_prevision_coseguro").value = 0
    if (campos_defs.get_value('mutual') == 168) {
        var rs = new tRS();
        rs.async = false;
        rs.open({ filtroXML: nvFW.pageContents["planes2"], params: "<criterio><params nro_plan='" + nro_plan + "' /></criterio>" })
        //rs.open("<criterio><select vista='planes'><campos>dbo.piz5D_money('cuota_credito2',importe_bruto,cuotas,nro_banco,nro_mutual,nro_grupo) as prevision_coseguro</campos><filtro><nro_plan type='igual'>" + nro_plan + "</nro_plan></filtro><orden></orden></select></criterio>")
        if (!rs.eof()) {
            $("importe_prevision_coseguro").value = rs.getdata('prevision_coseguro')
        }
    }

    analisis_actualizar(false)
}

function chkmax_disp_on_click() {
    if ($('chkmax_disp').checked) {
        $('divFiltrosLeft').hide()
        $('divFiltrosRight').hide()
        $('divFiltros2Left').hide()
        $('divFiltros2Right').hide()
        $('divFiltros3Left').hide()
        $('divFiltros3Right').hide()
    }
    else {
        $('divFiltrosLeft').show()
        $('divFiltrosRight').show()
        $('divFiltros2Left').show()
        $('divFiltros2Right').show()
        $('divFiltros3Left').show()
        $('divFiltros3Right').show()
    }
}

function selplan_on_click() {
    if ($('selplan').checked) {
        $('ifrplanes').show()
        $('tbfiltros').show()
        $('chkmax_disp').checked = true
        $('divFiltrosLeft').show()
        $('divFiltrosRight').show()
        $('divFiltros2Left').show()
        $('divFiltros2Right').show()
        $('divFiltros3Left').show()
        $('divFiltros3Right').show()
    }
    else {
        $('ifrplanes').hide()
        $('tbfiltros').hide()
    }
}

var win_creditos

function VerCreditos(modo) {
    var filtros = {}
    filtros['modo'] = modo
    filtros['nro_vendedor'] = consulta.nro_vendedor
    filtros['nro_docu'] = consulta.cliente.nro_docu
    filtros['BodyWidth'] = BodyWidth
    if (modo == 'V')
        if (consulta.nro_vendedor == 0) {
            nvFW.alert('Debe seleccionar un vendedor para realizar la consulta.')
            return
        }
    win_creditos = createWindow2({
        url: 'credito_listar.aspx?nro_vendedor=' + consulta.nro_vendedor,
        title: '<b>Créditos</b>',
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true
    });
    win_creditos.options.userData = { filtros: filtros }
    win_creditos.showCenter(true)

    //if (isMobile())
    //    mostrarMenuIzquierdo()
}

var nro_plan_sel = 0

function btnStatus(progress) {
    if (progress) {
        document.getElementById('btn1').onclick = null
        document.getElementById('btn1').style.cursor = 'progress'
        document.getElementById('img1').style.cursor = 'progress'
        document.getElementById('btn2').onclick = null
        document.getElementById('btn2').style.cursor = 'progress'
        document.getElementById('img2').style.cursor = 'progress'
        document.getElementById('btn3').onclick = null
        document.getElementById('btn3').style.cursor = 'progress'
        document.getElementById('img3').style.cursor = 'progress'
    }
    else {
        document.getElementById('btn1').onclick = function () { GuardarSolicitud('P') }
        document.getElementById('btn1').style.cursor = 'pointer'
        document.getElementById('img1').style.cursor = 'pointer'
        document.getElementById('btn2').onclick = function () {
            GuardarSolicitud('H')
        }
        document.getElementById('btn2').style.cursor = 'pointer'
        document.getElementById('img2').style.cursor = 'pointer'
        document.getElementById('btn3').onclick = function () { consulta.limpiar() }
        document.getElementById('btn3').style.cursor = 'pointer'
        document.getElementById('img3').style.cursor = 'pointer'
    }
}



function GuardarSolicitud(estado) {

    var nro_mutual = campos_defs.get_value('mutual')// $('mutual').value
    var nro_banco = campos_defs.get_value('banco') //$('banco').value            
    /*if(inaes_black_list(nro_banco)){
        alert("Persona bloqueada para alta en voii. Seleccione otro Banco")
        return
    }*/
    var nro_analisis = campos_defs.get_value("cbAnalisis") // $('cbAnalisis').value
    if ((nro_mutual == '') || (nro_banco == '') || (nro_analisis == '')) {
        nvFW.alert('Debe seleccionar un banco/mutual/análisis para guardar el crédito')
        return
    }



    btnStatus(true)
    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga', 'Guardando crédito...')
    var modo = 'S'
    nro_plan_sel = 0
    if ($('selplan').checked) {
        try {
            var iframe = $('ifrplanes');
            var radioGrp = iframe.contentDocument.forms.frmplanes.rdplan
            if (radioGrp.length == undefined)
                if (iframe.contentDocument.forms.frmplanes.rdplan.checked)
                    nro_plan_sel = iframe.contentDocument.forms.frmplanes.rdplan.value
            for (i = 0; i < radioGrp.length; i++) {
                if (radioGrp[i].checked == true)
                    nro_plan_sel = radioGrp[i].value
            }
        }
        catch (e) { nro_plan_sel = 0 }

        strWhere_planes = ''
        var nro_mutual = campos_defs.get_value('mutual') //$('mutual').value
        var nro_banco = campos_defs.get_value('banco') //$('banco').value
        if ((nro_grupo == 0) || (nro_grupo == 90)) {
            strWhere_planes += "<nro_sistema type='igual'>" + nro_sistema + "</nro_sistema>"
            strWhere_planes += "<nro_lote type='igual'>" + nro_lote + "</nro_lote>"
        }
        else
            strWhere_planes += "<nro_grupo type='igual'>" + nro_grupo + "</nro_grupo>"
        strWhere_planes += "<nro_mutual type='igual'>" + nro_mutual + "</nro_mutual>"
        strWhere_planes += "<nro_banco type='igual'>" + nro_banco + "</nro_banco>"
        strWhere_planes += "<marca type='igual'>'S'</marca>"
        strWhere_planes += "<falta type='menos'>getdate()</falta>"
        strWhere_planes += "<fbaja type='sql'>(fbaja > getdate() or fbaja is null)</fbaja>"
        strWhere_planes += "<vigente type='igual'>1</vigente>"
        strWhere_planes += "<nro_tabla_tipo type='igual'>1</nro_tabla_tipo>"
        var campo_max
        var campo_min
        if (consulta.cliente.sexo == 'M') {
            campo_max = 'edad_max_masc'
            campo_min = 'edad_min_masc'
        }
        else {
            campo_max = 'edad_max_fem'
            campo_min = 'edad_min_fem'
        }

        strWhere_planes += "<sql type='sql'><![CDATA[datediff(year," + ajustarFecha(consulta.cliente.fe_naci) + ", getdate()) >= " + campo_min + "]]></sql>"
        strWhere_planes += "<sql type='sql'><![CDATA[datediff(year, " + ajustarFecha(consulta.cliente.fe_naci) + ", dateadd(month, cuotas, dbo.rm_primervencimiento(getdate(), nro_plan))) <= " + campo_max + "]]></sql>"
        var maxImporte = TotalCancelaciones1

        if (!$('chkFiltroCuenta').checked) {
            if (nro_banco_debito != undefined)
                strWhere_planes += "<sql type='sql'><![CDATA[((nro_tipo_cobro = 4 and nro_banco_debito = " + nro_banco_debito + ") or (nro_tipo_cobro <> 4))]]></sql>"
        }

        if (!$('chkFiltroBCRA').checked) {
            if (sit_bcra != undefined)
                strWhere_planes += "<sql type='sql'><![CDATA[((sitbcra_max is null) or (" + sit_bcra + " between sitbcra_min and sitbcra_max))]]></sql>"
        }

        strWhere_planes += "<sql type='sql'><![CDATA[((nro_tipo_cobro in (1,4) and (cod_prov = " + cod_prov_persona + " or cod_prov = 0 or cod_prov is null)) or (nro_tipo_cobro not in (1,4)) )]]></sql>"
        strWhere_planes += "<nro_plan type='igual'>" + nro_plan_sel + "</nro_plan>"
        strWhere_planes += "<importe_cuota type='menos'>" + importe_max_cuota + "</importe_cuota>"
        strWhere_planes += "<importe_neto type='mas'>" + maxImporte + "</importe_neto>"
        //                            if (nro_tipo_cobro == 1)
        //                                strWhere_planes += "<nro_tipo_cobro type='in'>1,5</nro_tipo_cobro>"
        //                            else
        strWhere_planes += "<nro_tipo_cobro type='in'>" + nro_tipo_cobro + "</nro_tipo_cobro>"

        var nro_plan_seleccionado = getPlan_Selected()
        if (nro_plan_seleccionado > 0) {
            strWhere_planes += "<nro_plan type='igual'>" + nro_plan_seleccionado + "</nro_plan>"
            var rs = new tRS();
            rs.open({ filtroXML: nvFW.pageContents.planes_lotes, filtroWhere: "<criterio><select><filtro>" + strWhere_planes + "</filtro></select></criterio>", params: "<criterio><params fe_naci='" + consulta.cliente.fe_naci + "' tiene_seguro='" + tiene_seguro + "' /></criterio>" })
            if (rs.eof()) {
                nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
                nvFW.alert('<b>El plan seleccionado es incorrecto.</b><br>Vuelva a realizar la búsqueda de planes y seleccione nuevamente.')
                btnStatus(false)
                return
            }
        }
        //anulado desde 20220406
        /*var rs = new tRS();
        rs.open({ filtroXML: nvFW.pageContents.planes_lotes, filtroWhere: "<criterio><select><filtro>" + strWhere_planes + "</filtro></select></criterio>", params: "<criterio><params fe_naci='" + fe_naci + "' tiene_seguro='" + tiene_seguro + "' /></criterio>" })
        if (rs.eof()) {
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
            nvFW.alert('<b>El plan seleccionado es incorrecto.</b><br>Vuelva a realizar la búsqueda de planes y seleccione nuevamente.')
            btnStatus(false)
            return
        }*/
    }
    else
        nro_plan_sel = -1
    var inconsistencias = 0;
    if (nro_plan_sel != 0) {

        /* XML Cancelaciones */
        var xmlcancelaciones = ""
        var tiene_cancelaciones = false;
        xmlcancelaciones = "<?xml version='1.0' encoding='iso-8859-1'?><cancelaciones>"
        for (var x in Creditos) {
            if (Creditos[x]['cancela'] == true) {
                tiene_cancelaciones = true;
                var nro_credito_calc = (Creditos[x]['nro_calc_tipo'] == 4) ? Creditos[x]['nro_credito_seguro'] : Creditos[x]['nro_credito']
                xmlcancelaciones += "<cancelacion importe_pago='" + Creditos[x]['saldo'] + "' nro_entidad_destino='" + Creditos[x]['saldo_nro_entidad'] + "' cancela_cuota='" + Creditos[x]['importe_cuota'] + "' cancela_vence='" + Creditos[x]['cancela_vence'] + "' cancela_nro_credito='" + nro_credito_calc + "' cancela_cuota_paga='" + Creditos[x]['cancela_cuota_paga'] + "' nro_pago_concepto='" + Creditos[x]['nro_pago_concepto'] + "' />"
            }
        }
        xmlcancelaciones += "</cancelaciones>"

        var evalua_motor = 0;
        var xmlmotorparametros = "<?xml version='1.0' encoding='iso-8859-1'?><motor>"
        //si evalua motor, no tiene cancelaciones y el estado de la combinaciones banco/mutual/analisis es aprobada, va a estado "esperando respuesta" (por parte del motor de cuad para dar de alta el consumo y luego pasar al estado presupuesto)
        if (motor.datos['evalua_motor'] == 1 && !tiene_cancelaciones && motor.datos['rechaza_motor'] == 0 && estado == "H") {
            estado = (motor.datos.nro_motor_decision == "1538") ? "6" : estado; //si el motor de deciscion es cuad, lo paso a esperando respuesta, porque es el estado q pone en pendiente el credito hasta q cuad responda
            evalua_motor = 1;
            var estado_posterior = motor.get('estado')

            xmlmotorparametros += "<parametro nombre='clave_sueldo' valor='" + motor.datos.clave_sueldo + "' />"
            xmlmotorparametros += "<parametro nombre='socio_nuevo' valor='" + motor.datos.socio_nuevo + "' />"
            xmlmotorparametros += "<parametro nombre='scu_id' valor='" + motor.datos.Scu_Id + "' />"
            xmlmotorparametros += "<parametro nombre='sce_id' valor='" + motor.datos.Sce_Id + "' />"
            xmlmotorparametros += "<parametro nombre='scm_id' valor='" + motor.datos.Scm_Id + "' />"
            xmlmotorparametros += "<parametro nombre='id_transf_log' valor='" + motor.datos.id_transf_log + "' />"
            xmlmotorparametros += "<parametro nombre='estado' valor='" + estado_posterior + "' />"
            xmlmotorparametros += "<parametro nombre='nro_motor_decision' valor='" + motor.datos.nro_motor_decision + "' />"
            xmlmotorparametros += "<parametro nombre='nosis_id_consulta' valor='" + motor.datos.nosis_id_consulta + "' />"

            if (estado_posterior == "") {
                inconsistencias += 1
            }
        } else {
            if (motor.datos['evalua_motor'] == 1 && estado != "H") {
                xmlmotorparametros += "<parametro nombre='id_transf_log' valor='" + motor.datos.id_transf_log + "' />"
                xmlmotorparametros += "<parametro nombre='estado' valor='" + estado + "' />"
            }
        }

        xmlmotorparametros += "</motor>"

        if (inconsistencias > 0) {
            nvFW.alert('El credito no se puede guardar, porque contiene datos inconsistentes.<br>Por favor, notifiquelo')
            console.log(xmlmotorparametros)
            return
        }
        //    
        //return
        /* XML Persona  */
        var xmlpersona = ""
        xmlpersona = "<?xml version='1.0' encoding='iso-8859-1'?>"
        xmlpersona += "<persona nro_docu='" + nro_docu_db + "' tipo_docu='" + tipo_docu + "' sexo='" + consulta.cliente.sexo + "' cuit='" + consulta.cliente.cuit + "' fe_naci='" + consulta.cliente.fe_naci + "' razon_social='" + razon_social.trim() + "' "
        xmlpersona += "domicilio='" + domicilio + "' CP='" + CP + "' localidad='" + localidad + "' provincia='" + provincia + "' cod_prov='" + cod_prov_persona + "'></persona>"
        /* XML Trabajo */
        var xmltrabajo = ""
        xmltrabajo = "<?xml version='1.0' encoding='iso-8859-1'?><trabajo nro_sistema='" + nro_sistema + "' nro_lote='" + nro_lote + "' clave_sueldo='" + clave_sueldo + "' nro_grupo='" + nro_grupo + "'></trabajo>"
        /* XML Credito */
        var xmlcredito = ""
        xmlcredito = "<?xml version='1.0' encoding='iso-8859-1'?><credito estado='" + estado + "' nro_vendedor='" + consulta.nro_vendedor + "' nro_plan='" + nro_plan_sel + "' nro_banco='" + nro_banco + "' nro_mutual='" + nro_mutual + "' nro_analisis='" + nro_analisis + "' nro_tipo_cobro='" + nro_tipo_cobro + "' ></credito>"
        /* XML Analisis */
        var xmlanalisis = ""
        var Etiqueta
        xmlanalisis = "<Analisis nro_analisis='" + nro_analisis + "'>"
        for (var i in Etiquetas) {
            Etiqueta = Etiquetas[i]
            xmlanalisis += "<Etiqueta nro_etiqueta='" + Etiqueta["nro_etiqueta"] + "' orden='" + Etiqueta['orden'] + "' tipo_dato='" + Etiqueta['tipo_dato'] + "'>"
            xmlanalisis += "<valor>"
            switch (Etiqueta['tipo_dato']) {
                case 'B':
                    xmlanalisis += $('nuevo_monto' + i).checked == true ? '1' : '0'
                    break
                default:
                    xmlanalisis += $('nuevo_monto' + i).value
            }
            xmlanalisis += "</valor>"
            xmlanalisis += "</Etiqueta>"
        }
        xmlanalisis += "</Analisis>"


        /* XML Parametros */
        var xmlparametros = ""
        xmlparametros = "<?xml version='1.0' encoding='iso-8859-1'?><parametros>"
        var rs = new tRS();
        rs.open({ filtroXML: nvFW.pageContents["planes_parametros"], params: "<criterio><params nro_plan='" + nro_plan_sel + "' /></criterio>" })
        while (!rs.eof()) {
            xmlparametros += "<parametro nombre='" + rs.getdata('parametro') + "' valor='" + rs.getdata('valor_defecto') + "' />"
            rs.movenext()
        }

        if (motor.datos['evalua_motor'] == 1) {
            xmlparametros += "<parametro nombre='id_transf_log_motor' valor='" + motor.datos.id_transf_log + "' />"
            xmlparametros += "<parametro nombre='dictamen_motor' valor='" + motor.datos.dictamen + "' />"
        }
        xmlparametros += "</parametros>"
        var mensaje_usuario = ''
        if (motor.tiene_mensaje()) {
            mensaje_usuario = motor.datos.mensaje_usuario
        }

        var nro_credito = 0
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        //console.log("Estado "+estado)
        //console.log(xmlcredito)
        //return;
        var parametrosCr = {};
        parametrosCr['modo'] = modo
        parametrosCr['estado'] = estado
        parametrosCr['nro_credito'] = nro_credito
        parametrosCr['persona_existe'] = persona_existe
        parametrosCr['noti_prov'] = noti_prov
        parametrosCr['nro_archivo_noti_prov'] = nro_archivo_noti_prov
        parametrosCr['xmlpersona'] = xmlpersona
        parametrosCr['xmltrabajo'] = xmltrabajo
        parametrosCr['xmlcredito'] = xmlcredito
        parametrosCr['xmlanalisis'] = xmlanalisis
        parametrosCr['xmlcancelaciones'] = xmlcancelaciones
        parametrosCr['xmlparametros'] = xmlparametros
        parametrosCr['NosisXML'] = NosisXML
        parametrosCr['evalua_motor'] = evalua_motor
        parametrosCr['mensaje_usuario'] = mensaje_usuario
        parametrosCr['xmlmotorparametros'] = xmlmotorparametros

        if (estado == "P" && motor.datos['evalua_motor'] == 1) {
            Dialog.confirm('Deseas continuar?.\nRercuerde que una vez generado el credito en pendiente, no podrá incorporarlo al circuito de originación', {
                width: 350,
                className: "alphacube",
                okLabel: "Si",
                cancelLabel: "No",
                onOk: function (win) {
                    savecredito(parametrosCr)
                    win.close()
                },
                onCancel: function (win) {
                    btnStatus(false)
                    win.close()
                }
            }); //Dialog

        } else {
            //advertencia previa si va por motor, de que puede que genere un consumo
            if (motor.datos['evalua_motor'] == 1) {
                Dialog.confirm('¿Desea continuar?.\nPuede que generé un consumo sobre la persona', {
                    width: 350,
                    className: "alphacube",
                    okLabel: "Si",
                    cancelLabel: "No",
                    onOk: function (win) {
                        savecredito(parametrosCr)
                        win.close()
                    },
                    onCancel: function (win) {
                        btnStatus(false)
                        win.close()
                    }
                }); //Dialog                               
            } else {
                savecredito(parametrosCr)
            }//motor.datos['evalua_motor']

        }

    }
    else {
        nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga')
        btnStatus(false)
        nvFW.alert('Seleccione un plan')
    }
}//guardar solicitud

var cambioDeWidth = 1;
function window_onresize_movil() {

    $("divEspacioBotonera").show();
    $("imgMenu").show();
    $("imgMenuDerecho").hide(); //va show 

    menuIzquierdoVisible = false;

    /* if (!vMenuRight.functionMobile) {
    $("imgMenuDerecho").hide();
    }*/

    $("menu_left_vidrio").show();
    $("menu_right_vidrio").show();

    $("user_sucursal").hide();
    $("br1").hide();
    $("br2").hide();

    if ($("logo").data != 'image/nova-aux.svg') {
        $("logo").data = 'image/nova-aux.svg'
        if (calcularScrollEvent == "top") {
            $("logo").setStyle({ height: "50px", width: "150px" })
        }
        else {
            $("logo").setStyle({ height: "40px", width: "125px" })
        }
    }

    $(vMenuLeft.canvasMobile).style.position = "fixed";
    $(vMenuLeft.canvasMobile).style.width = tamanio.div_left.width + "%"
    $(vMenuLeft.canvasMobile).style.height = tamanio.div_left.height + "px"

    $(vMenuLeft.canvasMobile).style.marginTop = "0px";

    $("menu_left_vidrio").style.width = tamanio.div_left_vidrio.width + "%"
    $("menu_left_vidrio").style.height = tamanio.div_left_vidrio.height + "px"

    $("menu_right_vidrio").style.width = tamanio.div_left_vidrio.width + "%"
    $("menu_right_vidrio").style.height = tamanio.div_left_vidrio.height + "px"

    $$("BODY")[0].setStyle({ overflowy: "auto", width: "99.9%", float: "none" })

    $("top_menu").style.position = "fixed"

    vMenuLeft.resize(true)

    if (!vMenuLeft.clasicMenu) {
        $(vMenuLeft.canvasMobile).children[0].rows[0].show()
    }

    $$("BODY")[0].style.marginTop = "0px"

    $(vMenuLeft.canvasMobile).style.left = "-540px"
    $(vMenuLeft.canvasMobile).style.top = $("top_menu").getHeight() + "px"
    $(vMenuLeft.canvasMobile).style.transition = "all 0.3s";

    // $("tbButtons").style.width = $$("BODY")[0].getWidth()  + "px"
    $("tbButtons").style.position = "fixed"

    $("divVendedor").style.width = "100%"
    $("divVendedor").style.marginTop = "50px"
    $("divSelTrabajo").style.width = "100%"
    $("divDatosPersonales").style.width = "100%"
    $("divGrupo").style.width = "100%"
    $("divSocio").style.width = "100%"
    $("divProducto").style.width = "100%"
    $("divAnalisis").style.width = "100%"
    $("divFiltros").style.width = "100%"
    $("tbButtons").style.width = "98%"

    $("div_padding_left").style.width = "0px"
    //$$("body")[0].style.paddingLeft = "0px"

    $("divVendedor").style.marginLeft = "0px"
    $("divSelTrabajo").style.marginLeft = "0px"
    $("divDatosPersonales").style.marginLeft = "0px"
    $("divGrupo").style.marginLeft = "0px"
    $("divSocio").style.marginLeft = "0px"
    $("divProducto").style.marginLeft = "0px"
    $("divAnalisis").style.marginLeft = "0px"
    $("divFiltros").style.marginLeft = "0px"
    $("tbButtons").style.marginLeft = "0px"

    $("top_menu").style.left = "0px"
}

function window_onresize_desktop() {



    $("divEspacioBotonera").hide();

    $("div_padding_left").style.width = (window.innerWidth - tamanio.div_top_body.width) / 2 + "px"
    //$$("body")[0].style.paddingLeft = (window.innerWidth - tamanio.div_top_body.width) / 2 + "px"


    $("top_menu").setStyle({ opacity: 1 })

    $(vMenuLeft.canvasMobile).style.transition = "";

    $("imgMenu").hide();
    //$("imgMenuDerecho").hide();

    $("menu_left_vidrio").hide();

    $("br1").show();
    $("br2").show();
    $("user_sucursal").show();

    if ($("logo").data != 'image/nova.svg') {
        $("logo").data = 'image/nova.svg'
        $("logo").setStyle({ height: "90px", width: "215px" })
    }

    $(vMenuLeft.canvasMobile).style.position = "fixed";
    $(vMenuLeft.canvasMobile).style.width = "200px"
    $(vMenuLeft.canvasMobile).style.height = "100%"
    $(vMenuLeft.canvasMobile).style.marginTop = "102px"
    $(vMenuLeft.canvasMobile).style.top = "0px"
    //$(vMenuLeft.canvasMobile).style.left = "initial"

    //vMenuRight.resize(false)
    vMenuLeft.resize(false)
    /*
    if (vMenuRight.clasicMenu) {
    $(vMenuRight.canvas).style.width = "100%"
    $(vMenuRight.canvas).style.float = "none"
    $(vMenuRight.canvas).style.marginTop = "0px"
    $(vMenuRight.canvas).style.top = "0px"
    $(vMenuRight.canvas).style.position = "initial"
    }*/

    //if (!vMenuLeft.clasicMenu) {
    //    $(vMenuLeft.canvasMobile).children[0].rows[0].hide()
    //}

    $("menu_right_vidrio").hide();

    // $$("BODY")[0].setStyle({ overflowy: "auto", width: tamanio.div_top_body.width /* + (window.innerWidth - tamanio.div_top_body.width) / 2*/ + "px" })

    $$("BODY")[0].style.marginTop = "0px";
    $("top_menu").style.position = "fixed"
    $("top_menu").style.left = (window.innerWidth - tamanio.div_top_body.width) / 2 + "px"
    $(vMenuLeft.canvasMobile).style.left = (window.innerWidth - tamanio.div_top_body.width) / 2 + "px"

    $(vMenuLeft.canvasMobile).style.float = "left"

    $$("BODY")[0].style.float = "left"

    $("top_menu").setStyle({ width: tamanio.div_top_menu.width + "px", height: tamanio.div_top_menu.height + "px" })

    $("tbButtons").style.width = ($$("BODY")[0].getWidth() - 16) + "px"
    //$("tbButtons").style.position = "relative"

    $("divVendedor").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divVendedor").style.marginTop = "102px"
    $("divSelTrabajo").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divDatosPersonales").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divGrupo").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divSocio").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divProducto").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divAnalisis").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("divFiltros").style.width = ($("top_menu").getWidth() - 200) + "px"
    $("tbButtons").style.width = ($("top_menu").getWidth() - 200) + "px"

    $("divVendedor").style.marginLeft = "200px"
    $("divSelTrabajo").style.marginLeft = "200px"
    $("divDatosPersonales").style.marginLeft = "200px"
    $("divGrupo").style.marginLeft = "200px"
    $("divSocio").style.marginLeft = "200px"
    $("divProducto").style.marginLeft = "200px"
    $("divAnalisis").style.marginLeft = "200px"
    $("divFiltros").style.marginLeft = "200px"
    $("tbButtons").style.marginLeft = 200 + (window.innerWidth - tamanio.div_top_body.width) / 2 + "px"
}

var tamanio

function window_onresize() {
    try {

        //ejecutar onresize solo si hubo un cambio de width
        if (document.documentElement.clientWidth == cambioDeWidth) return
        cambioDeWidth = document.documentElement.clientWidth

        //setear tamaño de componentes
        tamanio = nvtWinDefault()

        //evitar mostrar mnostrar el vidrio simulando una accion
        window.top.nvSesion.usuario_accion()

        //$("contenedor").setStyle({ overflowy: "auto", height: tamanio.div_top_body.height + "px", width: tamanio.div_top_body.width + "px" })

        $("top_menu").style.width = tamanio.div_top_menu.width + "px"
        $("top_menu").style.height = tamanio.div_top_menu.height + "px"

        if (!tamanio.ocultarMenu) {
            window_onresize_desktop()
        }
        else {
            window_onresize_movil()
        }

        $(vMenuLeft.canvasMobile).style.borderRight = "3px solid #E3E0E3"
        // $(vMenuRight.canvasMobile).style.borderLeft = "3px solid #E3E0E3"
    }
    catch (e) { }
}

/*En otro caso la funcion nombre_del_menu.scroll_event(this) debe ser invocada como un evento oncroll desde el elemento que se scrollea*/
var calcularScrollEvent = "top";
function scroll_event(e) {

    if (bloquearSlideVertical < 1) {
    }
    else {
        window.scrollTo(0, 0);
        return
    }


    if (tamanio.ocultarMenu) {
        if ($$("BODY")[0].parentElement.scrollTop > 1) {
            if (calcularScrollEvent == "top") {
                calcularScrollEvent = "not_top"

                /*  if (!vMenuRight.functionMobile) {
                $(vMenuRight.canvas).style.top = "44px"
                $(vMenuRight.canvas).style.transition = "all 0.3s";
                $(vMenuRight.canvas).style.borderBottom = "3px solid #E3E0E3;"
                }*/
                $(vMenuLeft.canvasMobile).style.top = "44px"
                $("top_menu").setStyle({ height: "40px", opacity: 0.9 })

                $("logo").setStyle({ width: "125px", height: "40px", top: "0px" })
                $("imgbloqueo_sesion").setStyle({ height: "24px", width: "24px" })
                $("imgbutton_sesion").setStyle({ height: "24px", width: "24px" })
                $("img_Menu").setStyle({ height: "24px", width: "24px" })
            }
        } else {
            if (calcularScrollEvent == "not_top") {
                calcularScrollEvent = "top"

                $(vMenuLeft.canvasMobile).style.top = "50px"
                /*
                if (!vMenuRight.functionMobile) {
                $(vMenuRight.canvas).style.top = "50px"
                $(vMenuRight.canvas).style.transition = "all 0.3s";
                $(vMenuRight.canvas).style.borderBottom = "3px solid #E3E0E3;"
                }
                */
                $("top_menu").setStyle({ height: "50px", opacity: 1 })

                $("logo").setStyle({ width: "150px", height: "50px", top: "0px" })
                $("imgbloqueo_sesion").setStyle({ height: "32px", width: "32px" })
                $("imgbutton_sesion").setStyle({ height: "32px", width: "32px" })
                $("img_Menu").setStyle({ height: "32px", width: "32px" })
            }
        }
    }

}


function mostrarMenuIzquierdoSwipe(elemento, direccion) {
    if (elemento === "body" && !menuIzquierdoVisible && direccion === "derecha")
        mostrarMenuIzquierdo()
    if ((elemento === (vMenuLeft.canvasMobile) || elemento === ("menu_left_vidrio")) && direccion === "izquierda")
        mostrarMenuIzquierdo()
}

function mostrarMenuDerechoSwipe(elemento, direccion) {
    if (elemento === "body" && !menuDerechoVisible && direccion === "izquierda")
        mostrarMenuDerecho()
    if ((elemento === (vMenuRight.canvasMobile) || elemento === ("menu_right_vidrio")) && direccion === "derecha")
        mostrarMenuDerecho()
}

function detectSwipe(elemento, funcion, inicial) {

    deteccion_swipe = {};
    deteccion_swipe.sX = 0; deteccion_swipe.sY = 0; deteccion_swipe.eX = 0; deteccion_swipe.eY = 0; deteccion_swipe.cX = 0

    var min_x = 50;  //min x swipe para swipe horizontal 
    var max_y = 60;  //max y para swipe horizontal 

    var direccion = "";
    ele = elemento;

    ele.addEventListener('touchstart', function (e) {
        var t = e.touches[0];
        deteccion_swipe.sX = t.screenX;
        deteccion_swipe.sY = t.screenY;
        deteccion_swipe.cX = t.clientX;

    }, false);

    ele.addEventListener('touchmove', function (e) {

        //e.preventDefault()

        //window.scrollTo(window.scrollX, window.scrollY);
        var t = e.touches[0];
        deteccion_swipe.eX = t.screenX;
        deteccion_swipe.eY = t.screenY;

        //e.cancelBubble = true
    }, { passive: false });

    ele.addEventListener('touchend', function (e) {
        //e.preventDefault()
        if ((((deteccion_swipe.eX - min_x > deteccion_swipe.sX) || (deteccion_swipe.eX + min_x < deteccion_swipe.sX)) && ((deteccion_swipe.eY < deteccion_swipe.sY + max_y) && (deteccion_swipe.sY > deteccion_swipe.eY - max_y) && (deteccion_swipe.eX > 0)))) {
            if (deteccion_swipe.eX > deteccion_swipe.sX) direccion = "derecha";
            else direccion = "izquierda";
        }

        if (funcion === "colapsar") {

            if (menuDerechoVisible && direccion === "derecha") {
                //mostrarMenuDerecho()
            }
            else if (menuIzquierdoVisible && direccion === "izquierda") {
                mostrarMenuIzquierdo()
            }
        }
        else if (direccion == "izquierda" && funcion === "mostrar") {
            if (inicial && (($$("body")[0].getWidth() - inicial) < deteccion_swipe.cX)) {
                //mostrarMenuDerechoSwipe(elemento.id, direccion);
            }
        }
        else if (direccion == "derecha" && funcion === "mostrar") {
            if (inicial && (deteccion_swipe.cX < inicial))
                mostrarMenuIzquierdoSwipe(elemento.id, direccion);
        }
        direccion = "";
        deteccion_swipe.sX = 0; deteccion_swipe.sY = 0; deteccion_swipe.eX = 0; deteccion_swipe.eY = 0;
    }, false);
}

var menuIzquierdoVisible = false;
function mostrarMenuIzquierdo() {
    //if (document.activeElement.name != undefined) {
    //    ; $(document.activeElement.name).blur()
    //} //quitar el focus para ocultar el teclado mobile y el menu se muestre completo

    //  $('nro_docu').focus()

    menuIzquierdoVisible = !menuIzquierdoVisible
    // $(vMenuLeft.canvasMobile).style.height = ($$("body")[0].getHeight() + 60 - $("top_menu").getHeight()) + "px";
    $(vMenuLeft.canvasMobile).style.zIndex = "1"

    $("menu_left_vidrio").style.height = ($$("body")[0].getHeight() - $("top_menu").getHeight()) + "px";

    if (!menuIzquierdoVisible) {
        $(vMenuLeft.canvasMobile).style.left = "-540px";
        $("menu_left_vidrio").style.right = "-540px";
    }
    else {
        /*if (menuDerechoVisible) {
        mostrarMenuDerecho();
        }*/
        $(vMenuLeft.canvasMobile).style.left = "0px";

        $("menu_left_vidrio").style.right = "0px";
    }
    $(vMenuLeft.canvasMobile).style.height = '100%';
}

var menuDerechoVisible = false;
function mostrarMenuDerecho() {
    menuDerechoVisible = !menuDerechoVisible
    $(vMenuRight.canvasMobile).style.height = ($$("body")[0].getHeight() - $("top_menu").getHeight()) + "px";
    $("menu_right_vidrio").style.height = ($$("body")[0].getHeight() - $("top_menu").getHeight()) + "px";

    if (!menuDerechoVisible) {
        $(vMenuRight.canvasMobile).style.right = "-540px";
        $("menu_right_vidrio").style.left = "-540px";
    }
    else {
        if (menuIzquierdoVisible) {
            mostrarMenuIzquierdo();
        }

        $(vMenuRight.canvasMobile).style.right = "0px";
        $("menu_right_vidrio").style.left = "0px";
    }
}

function establecerFuncionBack(event) {

    /* var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
     if (isSafari) {
         history.pushState({}, '', '');
         return;
     }*/

    if (window.top.Windows.modalWindows.length > 0) {
        window.top.Windows.focusedWindow.close()
        history.pushState(null, document.title, location.href);

        if (window.top.Windows.focusedWindow && window.top.Windows.focusedWindow.callback_onresize)
            window.top.Windows.focusedWindow.callback_onresize()
    }
    else {
        if (menuIzquierdoVisible) {
            mostrarMenuIzquierdo()
            history.pushState(null, document.title, location.href);
        }
        else if (menuDerechoVisible) {
            mostrarMenuDerecho()
            history.pushState(null, document.title, location.href);
        }
        else {
            var vent = confirm("¿Desea salir?, Verifique haber guardado los cambios.")
            vent.okCallback = function () {
                if (nvFW.nvInterOP) {
                    nvFW.nvInterOP.sendMessage('close_app', '')
                }
                else {
                    window.removeEventListener('popstate', establecerFuncionBack);
                    history.back();
                }

                vent.cancelCallback = function () {
                    history.pushState(null, document.title, location.href);
                }
            }
        }
    }


    history.pushState(null, document.title, location.href);
    window.addEventListener('popstate', establecerFuncionBack);
}
/*
if (nvFW.nvInterOP) {
function abrirChat() {
nvFW.nvInterOP.openChatRoom();
}
 
nvFW.nvInterOP.sendMessage("login", "<action><params user='prueba_xmpp' password='1234562' token='' cod_app='cod_app' cod_implement='AABC10F' /></action>")
nvFW.nvInterOP.receiveMessageHandler = function (action, params) {
if (action == 'is_alive') {
nvFW.nvInterOP.sendMessage('is_alive', 'true')
return;
}
 
 
if (action == 'BackPressed') {
 
establecerFuncionBack()
 
nvFW.nvInterOP.sendMessage('BackPressed', 'true') // le respondo al esqueleto que ya me hice cargo del back
//nvFW.nvInterOP.sendMessage('BackPressed','false') //le respondo al esqueleto que manda la app al backgroun
return;
}
 
if (action == 'MessageReceived') {
alert('Notificacion Recibida')
console.log('Notificacin recibida.')
}
}
}
*/

function Btn_cancelaciones_onclick(objeto) {
    var nombre1 = (objeto) ? objeto.id : 'td_canc_int'
    $(nombre1).setStyle({ width: "30%", color: "#404040", cursor: "auto", textDecoration: "none" })
    var nombre = (nombre1 == 'td_canc_3') ? 'td_canc_int' : 'td_canc_3'
    $(nombre).setStyle({ width: "30%", color: "#FFFFFF", cursor: "pointer", textDecoration: "underline" })
    if (nombre1 == 'td_canc_3') {
        $('tbCredVigente').hide()
        $('tbCredVigente3').show()
    }
    else {
        $('tbCredVigente').show()
        $('tbCredVigente3').hide()
    }
}

/*--------------------------------------------------------------------
|   nvFW.nvInterOP
|---------------------------------------------------------------------
|
|   Interfaz entre WebApp de Android y JavaScript, con la cual podemos
|   ejecutar métodos en la aplicación nativa Android.
|
|-------------------------------------------------------------------*/
if (nvFW.nvInterOP) {
    nvFW.nvInterOP.checkIfHandlerExists('true')
    function abrirChat() {
        nvFW.nvInterOP.openChatRoom()
        if (isMobile())
            mostrarMenuIzquierdo()
    }

    //nvSession.UID

    // esto va en nvLogin.js: linea 278
    //try {
    //	 
    //	 if (nvFW.nvInterOP) {
    //		 nvFW.nvInterOP.sendMessage("login", "<action><params user='" +  $('UID').value + "' password='" + $('PWD').value + "' token='' cod_app='" + app_cod_sistema + "' cod_implement='AABC10F' /></action>")
    //	 }
    //} catch (e) {
    //}

    nvFW.nvInterOP.receiveMessageHandler = function (action, params) {
        if (action == 'is_alive') {
            nvFW.nvInterOP.sendMessage('is_alive', 'true')
            //         nvFW.nvInterOP.checkIfHandlerExists('true')
            return;
        }

        if (action == 'BackPressed') {
            establecerFuncionBack()
            nvFW.nvInterOP.sendMessage('BackPressed', 'true') // le respondo al esqueleto que ya me hice cargo del Back
            //nvFW.nvInterOP.sendMessage('BackPressed','false') //le respondo al esqueleto que manda la app al background
            return;
        }

        if (action == 'MessageReceived') {
            alert('Notificacion Recibida')
            // console.log('Notificacin recibida.')
        }

        if (action == 'get_hash') {
            nvFW.nvInterOP.sendMessage('get_hash', nvFW.get_hash())
        }

        if (action == 'xmppMessageReceived') {
            var xmlObj = new tXML()
            xmlObj.loadXML(params)
            var nod = xmlObj.selectNodes("action/params")[0]
            var messagesPreview = nod.getAttribute("messagesPreview")
            var newMessagesCount = nod.getAttribute("newMessagesCount")

            //alert("Operador de chat dice: <br><b>" + messagesPreview + "...</b>")
            // Mostrar mensajería en un dialog de Android
            nvFW.interOP.printDialogMessage('Operador de chat dice:', messagesPreview);
        }
    }
}

try {
    if (window.webkit.messageHandlers) {
        //
        window.webkit.messageHandlers.nvInterOp.receiveMessageHandler = function (action, params) {
            // 
            if (action == 'BackPressed') {
                //  
                establecerFuncionBack()
                window.webkit.messageHandlers.nvInterOp.postMessage('BackPressed') // le respondo al esqueleto que ya me hice cargo del Back
                return;
            }


        }

        // window.webkit.messageHandlers.nvInterOp.postMessage('close_app')
    }
}
catch (e) { }



function verTutoriales() {
    // window.open('https://youtu.be/k7QU1fab5Mo','_blank')
    var win_tutorial = createWindow2({
        url: 'tutoriales_precarga.aspx?codesrvsw=false',
        title: '<b>Tutoriales</b>',
        maxHeight: 500,
        minimizable: false,
        maximizable: false,
        draggable: true,
        resizable: true
    });
    win_tutorial.showCenter(true)

    if (isMobile())
        mostrarMenuIzquierdo()

}


function descargar_app() {
    if (isMobile())
        mostrarMenuIzquierdo()

    window.open('https://play.google.com/store/apps/details?id=com.improntasolutions.precarga&hl=es')
}


var idxmsgsavecr = 0;
var mensajessave = Array("Aguarde un instante...", "Obteniendo Información...", "Actualizando datos...", "Cargando datos del préstamo...", "Aguarde un instante...", "Generando análisis crediticio...", "Generando informes digitales...", "Actualizando datos...")
var msg_waitingsavecredito = function () {
    console.log(mensajessave[idxmsgsavecr]);
    nvFW.bloqueo_msg('blq_precarga', mensajessave[idxmsgsavecr])
    if (mensajessave.length - 1 == idxmsgsavecr) {
        idxmsgsavecr = 0;
    } else {
        idxmsgsavecr++;
    }
}

function savecredito(datos) {

    var intervalID = null;
    nvFW.bloqueo_activar($(document.documentElement), 'blq_precarga');
    msg_waitingsavecredito()
    intervalID = setInterval(msg_waitingsavecredito, 5000);
    nvFW.error_ajax_request('Default.aspx', {
        parameters: { modo: datos['modo'], estado: datos['estado'], nro_credito: datos['nro_credito'], persona_existe: datos['persona_existe'], noti_prov: datos['noti_prov'], nro_archivo_noti_prov: datos['nro_archivo_noti_prov'], xmlpersona: datos['xmlpersona'], xmltrabajo: datos['xmltrabajo'], xmlcredito: datos['xmlcredito'], xmlanalisis: datos['xmlanalisis'], xmlcancelaciones: datos['xmlcancelaciones'], xmlparametros: datos['xmlparametros'], NosisXML: datos['NosisXML'], evalua_motor: datos['evalua_motor'], xmlmotorparametros: datos['xmlmotorparametros'], mensaje_usuario: datos['mensaje_usuario'] },
        bloq_contenedor_on: false,
        onSuccess: function (err, transport) {
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga');
            clearInterval(intervalID)
            if (err.numError == 0) {
                if (err.mensaje != "") { //si tiene un mensaje, lo muestro
                    Dialog.alert(err.mensaje, { className: "alphacube", width: 400, height: 200, okLabel: "continuar", ok: function (thiswin) { consulta.limpiar(err.params.nro_credito); thiswin.close() } });
                } else {
                    consulta.limpiar(err.params.nro_credito)
                }
            }
            else
                nvFW.alert('Error al guardar el crédito.<br>' + err.numError + ' : ' + err.mensaje)
        }, onFailure: function (err) {
            nvFW.bloqueo_desactivar($(document.documentElement), 'blq_precarga');
            clearInterval(intervalID)
            Dialog.alert("No se pudo determinar la carga de credito. Antes de volver a intentar, revise el listado de creditos si no está cargado.", { className: "alphacube", width: 400, height: 200, okLabel: "continuar", ok: function (thiswin) { Precarga_Limpiar(err.params.nro_credito); thiswin.close() } });
        }
    });//error_ajax_request
}//savecredito


